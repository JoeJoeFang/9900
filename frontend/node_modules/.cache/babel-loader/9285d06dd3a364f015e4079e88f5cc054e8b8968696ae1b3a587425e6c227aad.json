{"ast":null,"code":"var _jsxFileName = \"/Users/hansijia/9900_/9900/frontend/src/pages/RegisterHost.jsx\",\n  _s = $RefreshSig$();\n//sijia han\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { TextField, Button, Typography, Box, useTheme, Snackbar, IconButton } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterHost = () => {\n  _s();\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const [registerData, setRegisterData] = useState({\n    companyName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const handleCloseSnackbar = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpenSnackbar(false);\n  };\n  const [, setOpenDialog] = useState(false);\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n  const [snackbarType, setSnackbarType] = useState('info');\n  const handleBack = () => navigate(-1);\n  const updateField = e => {\n    setRegisterData(prevState => ({\n      ...prevState,\n      [e.target.name]: e.target.value\n    }));\n  };\n  const registerUser = async e => {\n    e.preventDefault();\n\n    // Check if passwords match\n    if (registerData.password !== registerData.confirmPassword) {\n      setSnackbarMessage(\"Passwords do not match.\");\n      setOpenSnackbar(true);\n      return;\n    }\n\n    // Attempt to register the host\n    try {\n      console.log(registerData);\n      const response = await axios.post('http://localhost:5005/user/auth/register', {\n        companyName: registerData.companyName,\n        email: registerData.email,\n        password: registerData.password\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // If registration is successful\n      if (response.status === 201) {\n        console.log(\"Registration is successful, setting the snackbar message.\");\n        setSnackbarMessage(\"Registration successful!\");\n        setSnackbarType('success');\n        setOpenDialog(true);\n        setTimeout(() => {\n          navigate('/login-host'); // Redirect to the all events page\n        }, 2000); // Adjust delay as necessary\n\n        console.log('Register successfully');\n      }\n    } catch (errorResponse) {\n      // Handle registration errors\n      let errorMessage = 'An unexpected error occurred during registration.';\n      if (errorResponse.response) {\n        const status = errorResponse.response.status;\n        const message = errorResponse.response.data.message;\n        if (status === 400) {\n          // Custom error message for duplicate email\n          errorMessage = message.includes('email already exists') ? 'This email is already in use. Please use a different email address.' : message;\n        }\n      }\n      setSnackbarMessage(errorMessage);\n      setOpenSnackbar(true);\n    }\n  };\n  const action = /*#__PURE__*/_jsxDEV(IconButton, {\n    size: \"small\",\n    \"aria-label\": \"close\",\n    color: \"inherit\",\n    onClick: handleCloseSnackbar,\n    children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n      fontSize: \"small\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      minHeight: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      background: `url(${process.env.PUBLIC_URL}/default_background.jpg), linear-gradient(to right, #e66465, #9198e5)`,\n      backgroundSize: 'cover, cover',\n      backgroundPosition: 'center, center',\n      p: theme.spacing(2)\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        width: '100%',\n        mb: theme.spacing(4)\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        component: \"img\",\n        src: `${process.env.PUBLIC_URL}/LogoImage.jpg`,\n        sx: {\n          width: 150,\n          height: 'auto',\n          mb: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        color: \"white\",\n        sx: {\n          fontWeight: 'bold',\n          textAlign: 'center'\n        },\n        children: \"Join Our Amazing Ticket Platform\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        width: '90%',\n        maxWidth: 1200\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          color: 'white',\n          width: '40%',\n          p: 3,\n          borderRadius: theme.shape.borderRadius\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          gutterBottom: true,\n          sx: {\n            mb: 2,\n            color: 'white',\n            fontWeight: 'medium'\n          },\n          children: \"Sign up to discover the best events near you\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: '40%',\n          backgroundColor: 'rgba(255, 255, 255, 0.8)',\n          borderRadius: theme.shape.borderRadius,\n          p: theme.spacing(4),\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          sx: {\n            mb: 3,\n            fontWeight: 'bold',\n            color: theme.palette.primary.main\n          },\n          children: \"Create Your  Host Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          onSubmit: registerUser,\n          noValidate: true,\n          sx: {\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"companyName\",\n            label: \"Company Name\",\n            name: \"companyName\",\n            autoComplete: \"company-name\",\n            value: registerData.companyName,\n            onChange: updateField,\n            error: registerData.companyName && (registerData.companyName.length < 3 || registerData.companyName.length > 100 || /\\s/.test(registerData.companyName)),\n            helperText: registerData.companyName ? /\\s/.test(registerData.companyName) ? 'CompanyName cannot include spaces.' : registerData.companyName.length < 3 ? 'CompanyName must be at least 3 characters long.' : registerData.companyName.length > 100 ? 'CompanyName cannot be more than 100 characters long.' : '' : ' '\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"email\",\n            label: \"Email Address\",\n            name: \"email\",\n            autoComplete: \"email\",\n            autoFocus: true,\n            value: registerData.email,\n            onChange: updateField,\n            error: !/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(registerData.email) && registerData.email !== '',\n            helperText: !/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(registerData.email) && registerData.email !== '' ? 'Enter a valid email address.' : ' '\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            name: \"password\",\n            label: \"Password\",\n            type: \"password\",\n            id: \"password\",\n            autoComplete: \"new-password\",\n            value: registerData.password,\n            onChange: updateField,\n            inputProps: {\n              pattern: \"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}\",\n              title: \"Password must be at least 6 characters long, include a number, a lowercase letter, and an uppercase letter.\"\n            }\n            // Include the error and helperText properties using the same pattern and title\n            ,\n            error: registerData.password && !new RegExp(\"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}\").test(registerData.password),\n            helperText: registerData.password && !new RegExp(\"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}\").test(registerData.password) ? \"Password must be at least 6 characters long, include a number, a lowercase letter, and an uppercase letter.\" : ' '\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            name: \"confirmPassword\",\n            label: \"Confirm Password\",\n            type: \"password\",\n            id: \"confirmPassword\",\n            autoComplete: \"new-password\",\n            value: registerData.confirmPassword,\n            onChange: updateField,\n            error: registerData.confirmPassword && registerData.password !== registerData.confirmPassword,\n            helperText: registerData.confirmPassword && registerData.password !== registerData.confirmPassword ? 'Passwords do not match.' : ' '\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: handleBack,\n            size: \"large\",\n            sx: {\n              position: 'absolute',\n              left: theme.spacing(2),\n              top: theme.spacing(2),\n              backgroundColor: 'white',\n              color: 'primary.main',\n              '&:hover': {\n                backgroundColor: 'primary.light',\n                color: 'white'\n              },\n              boxShadow: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n              sx: {\n                fontSize: 28\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n            open: openSnackbar,\n            autoHideDuration: 6000,\n            onClose: handleCloseSnackbar,\n            message: snackbarMessage,\n            anchorOrigin: {\n              vertical: 'bottom',\n              horizontal: 'center',\n              fontSize: 'big'\n            },\n            ContentProps: {\n              style: {\n                backgroundColor: snackbarType === 'success' ? theme.palette.success.main : theme.palette.error.main\n              }\n            },\n            action: action // Use the action component here\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            sx: {\n              mt: 3,\n              mb: 2\n            },\n            onClick: registerUser,\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            variant: \"text\",\n            sx: {\n              mt: 2\n            },\n            onClick: () => navigate('/login-host'),\n            children: \"Already have an account? Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n};\n_s(RegisterHost, \"ApeejzQ4U+CC96bmVHfhERChtqM=\", false, function () {\n  return [useTheme, useNavigate];\n});\n_c = RegisterHost;\nexport default RegisterHost;\nvar _c;\n$RefreshReg$(_c, \"RegisterHost\");","map":{"version":3,"names":["React","useState","useNavigate","axios","TextField","Button","Typography","Box","useTheme","Snackbar","IconButton","ArrowBackIcon","CloseIcon","jsxDEV","_jsxDEV","RegisterHost","_s","theme","navigate","registerData","setRegisterData","companyName","email","password","confirmPassword","handleCloseSnackbar","event","reason","setOpenSnackbar","setOpenDialog","openSnackbar","snackbarMessage","setSnackbarMessage","snackbarType","setSnackbarType","handleBack","updateField","e","prevState","target","name","value","registerUser","preventDefault","console","log","response","post","headers","status","setTimeout","errorResponse","errorMessage","message","data","includes","action","size","color","onClick","children","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","sx","minHeight","display","flexDirection","justifyContent","alignItems","background","process","env","PUBLIC_URL","backgroundSize","backgroundPosition","p","spacing","width","mb","component","src","height","variant","fontWeight","textAlign","maxWidth","borderRadius","shape","gutterBottom","backgroundColor","palette","primary","main","onSubmit","noValidate","mt","margin","required","fullWidth","id","label","autoComplete","onChange","error","length","test","helperText","autoFocus","type","inputProps","pattern","title","RegExp","position","left","top","boxShadow","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","ContentProps","style","success","_c","$RefreshReg$"],"sources":["/Users/hansijia/9900_/9900/frontend/src/pages/RegisterHost.jsx"],"sourcesContent":["//sijia han\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { TextField, Button, Typography, Box, useTheme, Snackbar, IconButton } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport CloseIcon from '@mui/icons-material/Close';\n\n\nconst RegisterHost = () => {\n    const theme = useTheme();\n    const navigate = useNavigate();\n\n    const [registerData, setRegisterData] = useState({\n        companyName: '',\n        email: '',\n        password: '',\n        confirmPassword: '',\n    });\n\n    const handleCloseSnackbar = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpenSnackbar(false);\n    };\n    \n    const [, setOpenDialog] = useState(false);\n\n    const [openSnackbar, setOpenSnackbar] = useState(false);\n    const [snackbarMessage, setSnackbarMessage] = useState('');\n    const [snackbarType, setSnackbarType] = useState('info'); \n\n    const handleBack = () => navigate(-1);\n    \n    const updateField = (e) => {\n        setRegisterData(prevState => ({\n            ...prevState,\n            [e.target.name]: e.target.value,\n        }));\n    };\n\n\n    const registerUser = async (e) => {\n        e.preventDefault();\n    \n        // Check if passwords match\n        if (registerData.password !== registerData.confirmPassword) {\n            setSnackbarMessage(\"Passwords do not match.\");\n            setOpenSnackbar(true);\n            return;\n        }\n    \n        // Attempt to register the host\n        try {\n            console.log(registerData)\n            const response = await axios.post('http://localhost:5005/user/auth/register', {\n                companyName: registerData.companyName,\n                email: registerData.email,\n                password: registerData.password,\n            }, {\n                headers: { 'Content-Type': 'application/json' },\n            });\n    \n            // If registration is successful\n            if (response.status === 201) {\n                console.log(\"Registration is successful, setting the snackbar message.\");\n                setSnackbarMessage(\"Registration successful!\");\n                setSnackbarType('success')\n                setOpenDialog(true); \n\n                setTimeout(() => {\n                    navigate('/login-host'); // Redirect to the all events page\n                }, 2000); // Adjust delay as necessary\n    \n                console.log('Register successfully');\n            }\n        } catch (errorResponse) {\n            // Handle registration errors\n            let errorMessage = 'An unexpected error occurred during registration.';\n            if (errorResponse.response) {\n                const status = errorResponse.response.status;\n                const message = errorResponse.response.data.message;\n    \n                if (status === 400) {\n                    // Custom error message for duplicate email\n                    errorMessage = message.includes('email already exists') ? 'This email is already in use. Please use a different email address.' : message;\n                }\n            }\n            setSnackbarMessage(errorMessage);\n            setOpenSnackbar(true);\n        }\n    };\n    const action = (\n        <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleCloseSnackbar}>\n            <CloseIcon fontSize=\"small\" />\n        </IconButton>\n    );\n    return (        \n        <Box sx={{\n            minHeight: '100vh',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center',\n            background: `url(${process.env.PUBLIC_URL}/default_background.jpg), linear-gradient(to right, #e66465, #9198e5)`,\n            backgroundSize: 'cover, cover',\n            backgroundPosition: 'center, center',\n            p: theme.spacing(2),\n        }}>\n            {/* Content similar to the login page, adjusted for registration */}\n            <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', width: '100%', mb: theme.spacing(4) }}>\n                <Box component=\"img\" src={`${process.env.PUBLIC_URL}/LogoImage.jpg`} sx={{ width: 150, height: 'auto', mb: 2 }} />\n                <Typography variant=\"h3\" color=\"white\" sx={{ fontWeight: 'bold', textAlign: 'center' }}>\n                    Join Our Amazing Ticket Platform\n                </Typography>\n            </Box>\n\n            <Box sx={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', width: '90%', maxWidth: 1200 }}>\n                <Box sx={{ color: 'white', width: '40%', p: 3, borderRadius: theme.shape.borderRadius }}>\n                    <Typography variant=\"h5\" gutterBottom sx={{ mb: 2, color: 'white', fontWeight: 'medium' }}>\n                        Sign up to discover the best events near you\n                    </Typography>\n                </Box>\n\n                <Box sx={{\n                    width: '40%',\n                    backgroundColor: 'rgba(255, 255, 255, 0.8)',\n                    borderRadius: theme.shape.borderRadius,\n                    p: theme.spacing(4),\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                }}>\n                    <Typography variant=\"h4\" sx={{ mb: 3, fontWeight: 'bold', color: theme.palette.primary.main }}>\n                        Create Your  Host Account\n                    </Typography>\n\n                    <Box component=\"form\" onSubmit={registerUser} noValidate sx={{ mt: 1 }}>\n                        <TextField\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"companyName\"\n                            label=\"Company Name\"\n                            name=\"companyName\"\n                            autoComplete=\"company-name\"\n                            value={registerData.companyName}\n                            onChange={updateField}\n                            error={registerData.companyName && (registerData.companyName.length < 3 || registerData.companyName.length > 100 ||/\\s/.test(registerData.companyName))}\n                            helperText={registerData.companyName\n                                ? (/\\s/.test(registerData.companyName)\n                                ? 'CompanyName cannot include spaces.'\n                                :\n                                    registerData.companyName.length < 3\n                                    ? 'CompanyName must be at least 3 characters long.'\n                                    : registerData.companyName.length > 100\n                                        ? 'CompanyName cannot be more than 100 characters long.'\n                                        : '')\n                                : ' '} />\n                        <TextField\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Email Address\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            autoFocus\n                            value={registerData.email}\n                            onChange={updateField}\n                            error={!/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(registerData.email) && registerData.email !== ''}\n                            helperText={!/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(registerData.email) && registerData.email !== '' ? 'Enter a valid email address.' : ' '} />\n                        <TextField\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"new-password\"\n                            value={registerData.password}\n                            onChange={updateField}\n                            inputProps={{\n                                pattern: \"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}\",\n                                title: \"Password must be at least 6 characters long, include a number, a lowercase letter, and an uppercase letter.\"\n                            }}\n                            // Include the error and helperText properties using the same pattern and title\n                            error={registerData.password && !new RegExp(\"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}\").test(registerData.password)}\n                            helperText={registerData.password && !new RegExp(\"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}\").test(registerData.password) ? \"Password must be at least 6 characters long, include a number, a lowercase letter, and an uppercase letter.\" : ' '} />\n                        <TextField\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"confirmPassword\"\n                            label=\"Confirm Password\"\n                            type=\"password\"\n                            id=\"confirmPassword\"\n                            autoComplete=\"new-password\"\n                            value={registerData.confirmPassword}\n                            onChange={updateField}\n                            error={registerData.confirmPassword && registerData.password !== registerData.confirmPassword}\n                            helperText={registerData.confirmPassword && registerData.password !== registerData.confirmPassword ? 'Passwords do not match.' : ' '} />\n                        <IconButton\n                            onClick={handleBack}\n                            size=\"large\"\n                            sx={{\n                                position: 'absolute',\n                                left: theme.spacing(2),\n                                top: theme.spacing(2),\n                                backgroundColor: 'white',\n                                color: 'primary.main',\n                                '&:hover': {\n                                    backgroundColor: 'primary.light',\n                                    color: 'white',\n                                },\n                                boxShadow: 3,\n                            }}\n                        >\n                            <ArrowBackIcon sx={{ fontSize: 28 }} />\n                        </IconButton>\n                           <Snackbar\n            open={openSnackbar}\n            autoHideDuration={6000}\n            onClose={handleCloseSnackbar}\n            message={snackbarMessage}\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'center' ,fontSize:'big'}}\n            ContentProps={{\n                style: {\n                    backgroundColor: snackbarType === 'success' ? theme.palette.success.main : theme.palette.error.main,\n                },\n            }}\n            action={action} // Use the action component here\n        />\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            sx={{ mt: 3, mb: 2 }}\n                            onClick={registerUser}\n                        >\n                            Register\n                        </Button>\n                        <Button\n                            fullWidth\n                            variant=\"text\"\n                            sx={{ mt: 2 }}\n                            onClick={() => navigate('/login-host')}\n                        >\n                            Already have an account? Login\n                        </Button>\n\n                        \n                    </Box>\n                </Box>\n            </Box>\n        </Box>\n    );\n};\n\nexport default RegisterHost;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}