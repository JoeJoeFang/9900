{"ast":null,"code":"var _jsxFileName = \"/Users/hansijia/9900_/9900/frontend/src/components/Navbar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport AllEvents from '../components/AllEvents';\nimport MyBookings from '../components/MyBookings';\nimport CreateNewEvent from '../components/CreateNewEvent';\nimport HostProfile from '../components/HostProfile';\nimport Logout from '../components/Logout';\nimport MyAccount from '../components/MyAccount'; // Assuming the Navbar is in the same directory level as HostedEvents\nimport HostedEvents from '../components/HostedEvents';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  _s();\n  // 使用 useState 钩子来创建 identity 状态\n  const [identity, setIdentity] = useState(localStorage.getItem('identity'));\n  // 使用 useEffect 钩子来监听 localStorage 的变化\n  useEffect(() => {\n    const handleStorageChange = event => {\n      // 如果发生变化的是 identity 键，更新组件状态\n      if (event.key === 'identity') {\n        setIdentity(localStorage.getItem('identity'));\n      }\n    };\n\n    // 添加事件监听器\n    window.addEventListener('storage', handleStorageChange);\n\n    // 清理函数，组件卸载时移除事件监听器\n    return () => {\n      window.removeEventListener('storage', handleStorageChange);\n    };\n  }, []);\n\n  // 根据用户角色动态决定展示哪些按钮的逻辑\n  const renderButtonsBasedOnRole = () => {\n    const buttonsForCustomer = [/*#__PURE__*/_jsxDEV(AllEvents, {}, \"allEvents\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyBookings, {}, \"myBookings\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyAccount, {}, \"myAccount\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Logout, {}, \"logout\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)];\n    const buttonsForHost = [/*#__PURE__*/_jsxDEV(AllEvents, {}, \"allEvents\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this),\n    /*#__PURE__*/\n    // 假设 HostedEvents 是你的一个组件，代表主办的活动 \n    _jsxDEV(HostedEvents, {}, \"HostedEvents\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateNewEvent, {}, \"createNewEvent\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HostProfile, {}, \"hostProfile\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Logout, {}, \"logout\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)];\n    console.log(identity);\n    return identity === 'customer' ? buttonsForCustomer : buttonsForHost;\n  };\n\n  // JSX 返回语句，这里实际调用了渲染按钮的函数\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-around',\n      padding: '20px 0'\n    },\n    children: renderButtonsBasedOnRole()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbar, \"Lw7RZFEEknoEWdG3fqCAPgHOgG0=\");\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","useEffect","AllEvents","MyBookings","CreateNewEvent","HostProfile","Logout","MyAccount","HostedEvents","jsxDEV","_jsxDEV","Navbar","_s","identity","setIdentity","localStorage","getItem","handleStorageChange","event","key","window","addEventListener","removeEventListener","renderButtonsBasedOnRole","buttonsForCustomer","fileName","_jsxFileName","lineNumber","columnNumber","buttonsForHost","console","log","style","display","justifyContent","padding","children","_c","$RefreshReg$"],"sources":["/Users/hansijia/9900_/9900/frontend/src/components/Navbar.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport AllEvents from '../components/AllEvents';\nimport MyBookings from '../components/MyBookings';\nimport CreateNewEvent from '../components/CreateNewEvent';\nimport HostProfile from '../components/HostProfile';\nimport Logout from '../components/Logout';\nimport MyAccount from '../components/MyAccount'; // Assuming the Navbar is in the same directory level as HostedEvents\nimport HostedEvents from '../components/HostedEvents';\n\n\nconst Navbar = () => {\n  // 使用 useState 钩子来创建 identity 状态\n  const [identity, setIdentity] = useState(localStorage.getItem('identity'));\n  // 使用 useEffect 钩子来监听 localStorage 的变化\n  useEffect(() => {\n    const handleStorageChange = (event) => {\n      // 如果发生变化的是 identity 键，更新组件状态\n      if (event.key === 'identity') {\n        setIdentity(localStorage.getItem('identity'));\n      }\n    };\n\n    // 添加事件监听器\n    window.addEventListener('storage', handleStorageChange);\n\n    // 清理函数，组件卸载时移除事件监听器\n    return () => {\n      window.removeEventListener('storage', handleStorageChange);\n    };\n  }, []);\n\n  // 根据用户角色动态决定展示哪些按钮的逻辑\n  const renderButtonsBasedOnRole = () => {\n    const buttonsForCustomer = [\n      <AllEvents key=\"allEvents\" />,\n      <MyBookings key=\"myBookings\" />,\n      <MyAccount key=\"myAccount\" />,\n      <Logout key=\"logout\" />\n    ];\n\n    const buttonsForHost = [\n      <AllEvents key=\"allEvents\" />,\n      // 假设 HostedEvents 是你的一个组件，代表主办的活动 \n      <HostedEvents key=\"HostedEvents\" />,\n      <CreateNewEvent key=\"createNewEvent\" />,\n      <HostProfile key=\"hostProfile\" />,\n      <Logout key=\"logout\" />\n    ];\n    console.log(identity)\n    return identity === 'customer' ? buttonsForCustomer : buttonsForHost;\n  };\n\n  // JSX 返回语句，这里实际调用了渲染按钮的函数\n  return (\n    <div style={{ display: 'flex', justifyContent: 'space-around', padding: '20px 0' }}>\n      {renderButtonsBasedOnRole()}\n    </div>\n  );\n};\n\nexport default Navbar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}