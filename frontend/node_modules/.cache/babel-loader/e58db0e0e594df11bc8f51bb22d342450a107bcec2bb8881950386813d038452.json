{"ast":null,"code":"var _jsxFileName = \"/Users/hansijia/9900_/9900/frontend/src/pages/RegisterCustomer.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { TextField, Button, Typography, Box, useTheme } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Snackbar from '@mui/material/Snackbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RegisterCustomer = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const [, setOpenDialog] = useState(false);\n  const [registerData, setRegisterData] = useState({\n    Name: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    cardNumber: '',\n    // Assuming we're adding a card number for some reason\n    cardCVC: '',\n    // Assuming we're adding CVC for some reason\n    cardExpirationDate: '' // Adding card expiration date in MM/YY format\n  });\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n  const [snackbarType, setSnackbarType] = useState('info');\n  const handleCloseSnackbar = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpenSnackbar(false);\n  };\n  const updateField = e => {\n    setRegisterData(prevState => ({\n      ...prevState,\n      [e.target.name]: e.target.value\n    }));\n  };\n  const handleBack = () => navigate(-1);\n  const handleExpirationDateChange = e => {\n    _s();\n    const {\n      value\n    } = e.target;\n    let formattedValue = value.replace(/[^0-9]/g, '').substring(0, 4);\n    if (formattedValue.length > 2) {\n      formattedValue = formattedValue.substring(0, 2) + '/' + formattedValue.substring(2, 4);\n    }\n    const isValidDate = validateExpirationDate(formattedValue);\n    const [expirationDateError, setExpirationDateError] = useState('');\n    setRegisterData(prevState => ({\n      ...prevState,\n      cardExpirationDate: formattedValue\n    }));\n    if (!isValidDate) {\n      setExpirationDateError('Expiration date must be in the future.');\n    } else {\n      setExpirationDateError(''); // Clear the error if the date is valid\n    }\n  };\n  _s(handleExpirationDateChange, \"48RkT0E5z4wxsLXV7qCrilUwKVg=\");\n  const validateExpirationDate = expiration => {\n    if (!/^(0[1-9]|1[0-2])\\/\\d{2}$/.test(expiration)) {\n      return false; // Not matching MM/YY format\n    }\n    const [expMonth, expYear] = expiration.split('/');\n    const currentYear = new Date().getFullYear() % 100; // Get the last two digits\n    const currentMonth = new Date().getMonth() + 1; // Get current month (0-11, add 1 for 1-12)\n\n    // Check if the year is less than the current year or if it's the current year and the month is past\n    if (parseInt(expYear, 10) < currentYear || parseInt(expYear, 10) === currentYear && parseInt(expMonth, 10) < currentMonth) {\n      return false;\n    }\n    return true;\n  };\n  const registerUser = async e => {\n    e.preventDefault();\n\n    // Check if passwords match\n    if (registerData.password !== registerData.confirmPassword) {\n      setSnackbarMessage(\"Passwords do not match.\");\n      setOpenSnackbar(true);\n      return;\n    }\n\n    // Attempt to register the host\n    try {\n      console.log(registerData);\n      const response = await axios.post('http://localhost:5005/user/auth/register', {\n        Name: registerData.Name,\n        email: registerData.email,\n        password: registerData.password,\n        cardNumber: registerData.cardNumber,\n        cardCVC: registerData.cardCVC,\n        cardExpirationDate: registerData.cardExpirationDate\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // If registration is successful\n      if (response.status === 201) {\n        setSnackbarMessage(\"Registration successful!\");\n        setOpenDialog(true);\n        setTimeout(() => {\n          navigate('/login-customer'); // Redirect to the all events page\n        }, 2000); // Adjust delay as necessary\n\n        console.log('Register successfully');\n      }\n    } catch (errorResponse) {\n      let errorMessage = 'An unexpected error occurred during registration.';\n      // Ensure the error response structure you're expecting matches what the backend sends\n      if (errorResponse.response && errorResponse.response.data && errorResponse.response.data.message) {\n        // Backend sends error messages in the format { message: '...' }\n        errorMessage = errorResponse.response.data.message;\n      }\n      // This sets the state which triggers the snackbar to show the error message\n      setSnackbarMessage(errorMessage);\n      setOpenSnackbar(true);\n    }\n  };\n  const action = /*#__PURE__*/_jsxDEV(IconButton, {\n    size: \"small\",\n    \"aria-label\": \"close\",\n    color: \"inherit\",\n    onClick: handleCloseSnackbar,\n    children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n      fontSize: \"small\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n      open: openSnackbar,\n      autoHideDuration: 6000,\n      onClose: handleCloseSnackbar,\n      message: snackbarMessage,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      ContentProps: {\n        style: {\n          backgroundColor: snackbarType === 'success' ? theme.palette.success.main : theme.palette.error.main\n        }\n      },\n      action: action\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        minHeight: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        background: `url(${process.env.PUBLIC_URL}/default_background.jpg), linear-gradient(to right, #e66465, #9198e5)`,\n        backgroundSize: 'cover, cover',\n        backgroundPosition: 'center, center',\n        p: theme.spacing(2)\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          width: '100%',\n          mb: theme.spacing(4)\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          component: \"img\",\n          src: `${process.env.PUBLIC_URL}/LogoImage.jpg`,\n          sx: {\n            width: 150,\n            height: 'auto',\n            mb: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          color: \"white\",\n          sx: {\n            fontWeight: 'bold',\n            textAlign: 'center'\n          },\n          children: \"Join Our Amazing Ticket Platform\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: registerUser,\n        noValidate: true,\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          width: '100%',\n          maxWidth: 600,\n          backgroundColor: 'rgba(255, 255, 255, 0.8)',\n          padding: theme.spacing(4),\n          borderRadius: theme.shape.borderRadius\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          sx: {\n            mb: 3,\n            fontWeight: 'bold',\n            color: theme.palette.primary.main\n          },\n          children: \"Create Your Customer Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          id: \"Name\",\n          label: \"Name\",\n          name: \"Name\",\n          autoComplete: \"name\",\n          autoFocus: true,\n          value: registerData.Name,\n          onChange: updateField,\n          error: registerData.Name && (registerData.Name.length < 3 || registerData.Name.length > 100 || /\\s/.test(registerData.Name)),\n          helperText: registerData.Name ? /\\s/.test(registerData.Name) ? 'Name cannot include spaces.' : registerData.Name.length < 3 ? 'Name must be at least 3 characters long.' : registerData.Name.length > 100 ? 'Name cannot be more than 100 characters long.' : '' : ' '\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          error: !/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(registerData.email) && registerData.email !== '',\n          helperText: !/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(registerData.email) && registerData.email !== '' ? 'Enter a valid email address.' : ' ',\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          id: \"email\",\n          label: \"Email Address\",\n          name: \"email\",\n          autoComplete: \"email\",\n          value: registerData.email,\n          onChange: updateField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"password\",\n          label: \"Password\",\n          type: \"password\",\n          id: \"password\",\n          autoComplete: \"new-password\",\n          value: registerData.password,\n          onChange: updateField,\n          inputProps: {\n            pattern: \"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}\",\n            title: \"Password must be at least 6 characters long, include a number, a lowercase letter, and an uppercase letter.\"\n          }\n          // Include the error and helperText properties using the same pattern and title\n          ,\n          error: registerData.password && !new RegExp(\"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}\").test(registerData.password),\n          helperText: registerData.password && !new RegExp(\"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}\").test(registerData.password) ? \"Password must be at least 6 characters long, include a number, a lowercase letter, and an uppercase letter.\" : ' '\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"confirmPassword\",\n          label: \"Confirm Password\",\n          type: \"password\",\n          id: \"confirmPassword\",\n          autoComplete: \"new-password\",\n          value: registerData.confirmPassword,\n          onChange: updateField,\n          error: registerData.confirmPassword && registerData.password !== registerData.confirmPassword,\n          helperText: registerData.confirmPassword && registerData.password !== registerData.confirmPassword ? 'Passwords do not match.' : ' '\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"cardNumber\",\n          label: \"Card Number\",\n          value: registerData.cardNumber,\n          onChange: updateField,\n          inputProps: {\n            maxLength: 16\n          },\n          error: registerData.cardNumber && !/^[\\d]{16}$/.test(registerData.cardNumber),\n          helperText: registerData.cardNumber && !/^[\\d]{16}$/.test(registerData.cardNumber) ? 'Card number must be 16 digits.' : ' '\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"cardCVC\",\n          label: \"CVC\",\n          value: registerData.cardCVC,\n          onChange: updateField,\n          inputProps: {\n            maxLength: 3\n          },\n          error: registerData.cardCVC && !/^\\d{3}$/.test(registerData.cardCVC),\n          helperText: registerData.cardCVC && !/^\\d{3}$/.test(registerData.cardCVC) ? 'CVC must be 3 digits.' : ' '\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"cardExpirationDate\",\n          label: \"Expiration Date (MM/YY)\",\n          value: registerData.cardExpirationDate,\n          onChange: handleExpirationDateChange,\n          inputProps: {\n            maxLength: 5\n          },\n          error: registerData.cardExpirationDate && !/^(0[1-9]|1[0-2])\\/\\d{2}$/.test(registerData.cardExpirationDate),\n          helperText: registerData.cardExpirationDate && !/^(0[1-9]|1[0-2])\\/\\d{2}$/.test(registerData.cardExpirationDate) ? 'Expiration date must be in the format MM/YY.' : ' '\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleBack,\n          size: \"large\",\n          sx: {\n            position: 'absolute',\n            left: theme.spacing(2),\n            top: theme.spacing(2),\n            backgroundColor: 'white',\n            color: 'primary.main',\n            '&:hover': {\n              backgroundColor: 'primary.light',\n              color: 'white'\n            },\n            boxShadow: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n            sx: {\n              fontSize: 28\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          sx: {\n            mt: 3,\n            mb: 2\n          },\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          variant: \"text\",\n          onClick: () => navigate('/login-customer'),\n          children: \"Already have an account? Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s2(RegisterCustomer, \"3lMUsC0sVTdWIjazh8aiachcTLc=\", false, function () {\n  return [useTheme, useNavigate];\n});\n_c = RegisterCustomer;\nexport default RegisterCustomer;\nvar _c;\n$RefreshReg$(_c, \"RegisterCustomer\");","map":{"version":3,"names":["React","useState","useNavigate","axios","TextField","Button","Typography","Box","useTheme","IconButton","ArrowBackIcon","CloseIcon","Snackbar","jsxDEV","_jsxDEV","Fragment","_Fragment","RegisterCustomer","_s2","_s","$RefreshSig$","theme","navigate","setOpenDialog","registerData","setRegisterData","Name","email","password","confirmPassword","cardNumber","cardCVC","cardExpirationDate","openSnackbar","setOpenSnackbar","snackbarMessage","setSnackbarMessage","snackbarType","setSnackbarType","handleCloseSnackbar","event","reason","updateField","e","prevState","target","name","value","handleBack","handleExpirationDateChange","formattedValue","replace","substring","length","isValidDate","validateExpirationDate","expirationDateError","setExpirationDateError","expiration","test","expMonth","expYear","split","currentYear","Date","getFullYear","currentMonth","getMonth","parseInt","registerUser","preventDefault","console","log","response","post","headers","status","setTimeout","errorResponse","errorMessage","data","message","action","size","color","onClick","children","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","ContentProps","style","backgroundColor","palette","success","main","error","sx","minHeight","display","flexDirection","justifyContent","alignItems","background","process","env","PUBLIC_URL","backgroundSize","backgroundPosition","p","spacing","width","mb","component","src","height","variant","fontWeight","textAlign","onSubmit","noValidate","maxWidth","padding","borderRadius","shape","primary","margin","required","fullWidth","id","label","autoComplete","autoFocus","onChange","helperText","type","inputProps","pattern","title","RegExp","maxLength","position","left","top","boxShadow","mt","_c","$RefreshReg$"],"sources":["/Users/hansijia/9900_/9900/frontend/src/pages/RegisterCustomer.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { TextField, Button, Typography, Box, useTheme } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Snackbar from '@mui/material/Snackbar';\n\n\n\nconst RegisterCustomer = () => {\n    const theme = useTheme();\n    const navigate = useNavigate();\n\n    const [,setOpenDialog] = useState(false);\n\n    \n    const [registerData, setRegisterData] = useState({\n        Name: '',\n        email: '',\n        password: '',\n        confirmPassword: '',\n        cardNumber: '', // Assuming we're adding a card number for some reason\n        cardCVC: '', // Assuming we're adding CVC for some reason\n        cardExpirationDate: '', // Adding card expiration date in MM/YY format\n    });\n\n    const [openSnackbar, setOpenSnackbar] = useState(false);\n    const [snackbarMessage, setSnackbarMessage] = useState('');\n    const [snackbarType, setSnackbarType] = useState('info'); \n    \n    const handleCloseSnackbar = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpenSnackbar(false);\n    };\n    const updateField = (e) => {\n        setRegisterData(prevState => ({\n            ...prevState,\n            [e.target.name]: e.target.value,\n        }));\n    };\n\n    const handleBack = () => navigate(-1);\n\n    const handleExpirationDateChange = (e) => {\n        const { value } = e.target;\n        let formattedValue = value.replace(/[^0-9]/g, '').substring(0, 4);\n    \n        if (formattedValue.length > 2) {\n            formattedValue = formattedValue.substring(0, 2) + '/' + formattedValue.substring(2, 4);\n        }\n    \n        const isValidDate = validateExpirationDate(formattedValue);\n\n        const [expirationDateError, setExpirationDateError] = useState('');\n    \n        setRegisterData(prevState => ({\n            ...prevState,\n            cardExpirationDate: formattedValue\n        }));\n    \n        if (!isValidDate) {\n            setExpirationDateError('Expiration date must be in the future.');\n        } else {\n            setExpirationDateError(''); // Clear the error if the date is valid\n        }\n    };\n    \n    \n    const validateExpirationDate = (expiration) => {\n        if (!/^(0[1-9]|1[0-2])\\/\\d{2}$/.test(expiration)) {\n            return false; // Not matching MM/YY format\n        }\n    \n        const [expMonth, expYear] = expiration.split('/');\n        const currentYear = new Date().getFullYear() % 100; // Get the last two digits\n        const currentMonth = new Date().getMonth() + 1; // Get current month (0-11, add 1 for 1-12)\n    \n        // Check if the year is less than the current year or if it's the current year and the month is past\n        if (parseInt(expYear, 10) < currentYear || (parseInt(expYear, 10) === currentYear && parseInt(expMonth, 10) < currentMonth)) {\n            return false;\n        }\n    \n        return true;\n    };\n    \n    \n    const registerUser = async (e) => {\n        e.preventDefault();\n\n         // Check if passwords match\n         if (registerData.password !== registerData.confirmPassword) {\n            setSnackbarMessage(\"Passwords do not match.\");\n            setOpenSnackbar(true);\n            return;\n        }\n    \n        // Attempt to register the host\n        try {\n            console.log(registerData)\n            const response = await axios.post('http://localhost:5005/user/auth/register', {\n                Name: registerData.Name,\n                email: registerData.email,\n                password: registerData.password,\n                cardNumber: registerData.cardNumber,\n                cardCVC: registerData.cardCVC,\n                cardExpirationDate:registerData.cardExpirationDate\n            }, {\n                headers: { 'Content-Type': 'application/json' },\n            });\n    \n            // If registration is successful\n            if (response.status === 201) {\n                setSnackbarMessage(\"Registration successful!\");\n                setOpenDialog(true); \n                setTimeout(() => {\n                    navigate('/login-customer'); // Redirect to the all events page\n                }, 2000); // Adjust delay as necessary\n    \n                console.log('Register successfully');\n            }\n        } catch (errorResponse) {\n            let errorMessage = 'An unexpected error occurred during registration.';\n            // Ensure the error response structure you're expecting matches what the backend sends\n            if (errorResponse.response && errorResponse.response.data && errorResponse.response.data.message) {\n                // Backend sends error messages in the format { message: '...' }\n                errorMessage = errorResponse.response.data.message;\n            }\n            // This sets the state which triggers the snackbar to show the error message\n            setSnackbarMessage(errorMessage);\n            setOpenSnackbar(true);\n        }\n    };\n    const action = (\n        <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleCloseSnackbar}>\n            <CloseIcon fontSize=\"small\" />\n        </IconButton>\n    );\n    \n    return (\n\n        <>\n                 <Snackbar\n                    open={openSnackbar}\n                    autoHideDuration={6000}\n                     onClose={handleCloseSnackbar}\n                     message={snackbarMessage}\n                     anchorOrigin={{ vertical: 'bottom', horizontal: 'center',}}\n                     ContentProps={{\n                        style: {\n                            backgroundColor: snackbarType === 'success' ? theme.palette.success.main : theme.palette.error.main,\n                        },\n                    }}\n                    action={action}\n                />\n\n        <Box sx={{\n            minHeight: '100vh',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center',\n            background: `url(${process.env.PUBLIC_URL}/default_background.jpg), linear-gradient(to right, #e66465, #9198e5)`,\n            backgroundSize: 'cover, cover',\n            backgroundPosition: 'center, center',\n            p: theme.spacing(2),\n        }}>\n            {/* Content and styling similar to the provided structure */}\n            <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', width: '100%', mb: theme.spacing(4) }}>\n                <Box component=\"img\" src={`${process.env.PUBLIC_URL}/LogoImage.jpg`} sx={{ width: 150, height: 'auto', mb: 2 }} />\n                <Typography variant=\"h3\" color=\"white\" sx={{ fontWeight: 'bold', textAlign: 'center' }}>\n                    Join Our Amazing Ticket Platform\n                </Typography>\n            </Box>\n            <Box component=\"form\" onSubmit={registerUser} noValidate sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', width: '100%', maxWidth: 600, backgroundColor: 'rgba(255, 255, 255, 0.8)', padding: theme.spacing(4), borderRadius: theme.shape.borderRadius }}>\n                <Typography variant=\"h4\" sx={{ mb: 3, fontWeight: 'bold', color: theme.palette.primary.main }}>\n                    Create Your Customer Account\n                </Typography>\n                <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"Name\"\n                    label=\"Name\"\n                    name=\"Name\"\n                    autoComplete=\"name\"\n                    autoFocus\n                    value={registerData.Name}\n                    onChange={updateField}\n\n                    error={registerData.Name && (registerData.Name.length < 3 || registerData.Name.length > 100 || /\\s/.test(registerData.Name))}\n                    helperText={registerData.Name\n                        ? (/\\s/.test(registerData.Name)\n                        ? 'Name cannot include spaces.'\n                        :\n                            registerData.Name.length < 3\n                            ? 'Name must be at least 3 characters long.'\n                            : registerData.Name.length > 100\n                                ? 'Name cannot be more than 100 characters long.'\n                                : '')\n                        : ' '} />\n                <TextField\n                    error={!/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(registerData.email) && registerData.email !== ''}\n                    helperText={!/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(registerData.email) && registerData.email !== '' ? 'Enter a valid email address.' : ' '}\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Email Address\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    value={registerData.email}\n                    onChange={updateField} />\n                <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    id=\"password\"\n                    autoComplete=\"new-password\"\n                    value={registerData.password}\n                    onChange={updateField}\n                    inputProps={{\n                        pattern: \"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}\",\n                        title: \"Password must be at least 6 characters long, include a number, a lowercase letter, and an uppercase letter.\"\n                    }}\n                    // Include the error and helperText properties using the same pattern and title\n                    error={registerData.password && !new RegExp(\"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}\").test(registerData.password)}\n                    helperText={registerData.password && !new RegExp(\"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}\").test(registerData.password) ? \"Password must be at least 6 characters long, include a number, a lowercase letter, and an uppercase letter.\" : ' '} />\n                <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"confirmPassword\"\n                    label=\"Confirm Password\"\n                    type=\"password\"\n                    id=\"confirmPassword\"\n                    autoComplete=\"new-password\"\n                    value={registerData.confirmPassword}\n                    onChange={updateField}\n                    error={registerData.confirmPassword && registerData.password !== registerData.confirmPassword}\n                    helperText={registerData.confirmPassword && registerData.password !== registerData.confirmPassword ? 'Passwords do not match.' : ' '} />\n                {/* Assuming card details are needed for host registration */}\n                <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"cardNumber\"\n                    label=\"Card Number\"\n                    value={registerData.cardNumber}\n                    onChange={updateField}\n                    inputProps={{ maxLength: 16 }}\n                    error={registerData.cardNumber && !/^[\\d]{16}$/.test(registerData.cardNumber)}\n                    helperText={registerData.cardNumber && !/^[\\d]{16}$/.test(registerData.cardNumber) ? 'Card number must be 16 digits.' : ' '} />\n                <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"cardCVC\"\n                    label=\"CVC\"\n                    value={registerData.cardCVC}\n                    onChange={updateField}\n                    inputProps={{ maxLength: 3 }}\n                    error={registerData.cardCVC && !/^\\d{3}$/.test(registerData.cardCVC)}\n                    helperText={registerData.cardCVC && !/^\\d{3}$/.test(registerData.cardCVC) ? 'CVC must be 3 digits.' : ' '} />\n                <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"cardExpirationDate\"\n                    label=\"Expiration Date (MM/YY)\"\n                    value={registerData.cardExpirationDate}\n                    onChange={handleExpirationDateChange}\n                    inputProps={{ maxLength: 5 }}\n                    error={registerData.cardExpirationDate && !/^(0[1-9]|1[0-2])\\/\\d{2}$/.test(registerData.cardExpirationDate)}\n                    helperText={registerData.cardExpirationDate && !/^(0[1-9]|1[0-2])\\/\\d{2}$/.test(registerData.cardExpirationDate)\n                        ? 'Expiration date must be in the format MM/YY.'\n                        : ' '} />\n                \n                \n                <IconButton\n                    onClick={handleBack}\n                    size=\"large\"\n                    sx={{\n                        position: 'absolute',\n                        left: theme.spacing(2),\n                        top: theme.spacing(2),\n                        backgroundColor: 'white',\n                        color: 'primary.main',\n                        '&:hover': {\n                            backgroundColor: 'primary.light',\n                            color: 'white',\n                        },\n                        boxShadow: 3,\n                    }}\n                >\n                    <ArrowBackIcon sx={{ fontSize: 28 }} />\n                </IconButton>\n                <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    sx={{ mt: 3, mb: 2 }}\n                >\n                    Register\n                </Button>\n                <Button\n                    fullWidth\n                    variant=\"text\"\n                    onClick={() => navigate('/login-customer')}\n                >\n                    Already have an account? Login\n                </Button>\n            </Box>\n        </Box>           \n    </>\n    );\n\n};\n\nexport default RegisterCustomer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}