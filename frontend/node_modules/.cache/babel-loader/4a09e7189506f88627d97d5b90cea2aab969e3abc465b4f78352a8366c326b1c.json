{"ast":null,"code":"var _jsxFileName = \"/Users/hansijia/9900_/9900/frontend/src/pages/RegisterCustomer.jsx\",\n  _s = $RefreshSig$();\n//sijia han\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { TextField, Button, Typography, Box, useTheme } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { Snackbar } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterCustomer = () => {\n  _s();\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n  const handleBack = () => {\n    navigate(-1);\n  };\n  const [registerData, setRegisterData] = useState({\n    Name: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    cardNumber: '',\n    // Assuming we're adding a card number for some reason\n    cardCVC: '',\n    // Assuming we're adding CVC for some reason\n    cardExpirationDate: '' // Adding card expiration date in MM/YY format\n  });\n  const updateField = e => {\n    setRegisterData({\n      ...registerData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleExpirationDateChange = e => {\n    const {\n      value\n    } = e.target;\n    let formattedValue = value.replace(/[^0-9]/g, '' // Remove non-digit characters\n    ).substring(0, 4); // Limit length to 4 digits to fit MMYY\n\n    if (formattedValue.length > 2) {\n      formattedValue = formattedValue.substring(0, 2) + '/' + formattedValue.substring(2, 4);\n    }\n    setRegisterData(prevState => ({\n      ...prevState,\n      cardExpirationDate: formattedValue\n    }));\n  };\n  const handleCloseSnackbar = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpenSnackbar(false);\n  };\n  const registerUser = async e => {\n    e.preventDefault();\n\n    // Your existing validation and registration logic here\n\n    try {\n      const response = await axios.post('http://localhost:5005/user/auth/register', registerData, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.status === 200) {\n        alert('Registration successful');\n        setOpenSnackbar(true);\n        // 使用 setTimeout 来延迟跳转，给用户显示消息的时间\n        setTimeout(() => {\n          navigate('/');\n        }, 3000); // 3秒后跳转\n      }\n    } catch (error) {\n      // Check if the error has a response object\n      if (error.response) {\n        // Handle HTTP errors (errors with response from the server)\n        alert(error.response.data.error || \"An error occurred during registration.\");\n      } else {\n        // Handle non-HTTP errors (e.g., network errors)\n        alert(\"A network error occurred, or the server did not respond.\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      minHeight: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      background: `url(${process.env.PUBLIC_URL}/default_background.jpg), linear-gradient(to right, #e66465, #9198e5)`,\n      backgroundSize: 'cover, cover',\n      backgroundPosition: 'center, center',\n      p: theme.spacing(2)\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        width: '100%',\n        mb: theme.spacing(4)\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        component: \"img\",\n        src: `${process.env.PUBLIC_URL}/LogoImage.jpg`,\n        sx: {\n          width: 150,\n          height: 'auto',\n          mb: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        color: \"white\",\n        sx: {\n          fontWeight: 'bold',\n          textAlign: 'center'\n        },\n        children: \"Join Our Amazing Ticket Platform\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      onSubmit: registerUser,\n      noValidate: true,\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        width: '100%',\n        maxWidth: 600,\n        backgroundColor: 'rgba(255, 255, 255, 0.8)',\n        padding: theme.spacing(4),\n        borderRadius: theme.shape.borderRadius\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        sx: {\n          mb: 3,\n          fontWeight: 'bold',\n          color: theme.palette.primary.main\n        },\n        children: \"Create Your Customer Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        id: \"Name\",\n        label: \"Name\",\n        name: \"Name\",\n        autoComplete: \"name\",\n        autoFocus: true,\n        value: registerData.Name,\n        onChange: updateField,\n        error: registerData.Name && (registerData.Name.length < 3 || registerData.Name.length > 100),\n        helperText: registerData.Name ? registerData.Name.length < 3 ? 'Name must be at least 3 characters long.' : registerData.Name.length > 100 ? 'Name cannot be more than 100 characters long.' : '' : ' '\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: openSnackbar,\n        autoHideDuration: 6000,\n        onClose: handleCloseSnackbar,\n        message: snackbarMessage,\n        action: /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"small\",\n          \"aria-label\": \"close\",\n          color: \"inherit\",\n          onClick: handleCloseSnackbar,\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        error: !/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(registerData.email) && registerData.email !== '',\n        helperText: !/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(registerData.email) && registerData.email !== '' ? 'Enter a valid email address.' : ' ',\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        id: \"email\",\n        label: \"Email Address\",\n        name: \"email\",\n        autoComplete: \"email\",\n        value: registerData.email,\n        onChange: updateField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        name: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        id: \"password\",\n        autoComplete: \"new-password\",\n        value: registerData.password,\n        onChange: updateField,\n        inputProps: {\n          pattern: \"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}\",\n          title: \"Password must be at least 6 characters long, include a number, a lowercase letter, and an uppercase letter.\"\n        }\n        // Include the error and helperText properties using the same pattern and title\n        ,\n        error: registerData.password && !new RegExp(\"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}\").test(registerData.password),\n        helperText: registerData.password && !new RegExp(\"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}\").test(registerData.password) ? \"Password must be at least 6 characters long, include a number, a lowercase letter, and an uppercase letter.\" : ' '\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        name: \"confirmPassword\",\n        label: \"Confirm Password\",\n        type: \"password\",\n        id: \"confirmPassword\",\n        autoComplete: \"new-password\",\n        value: registerData.confirmPassword,\n        onChange: updateField,\n        error: registerData.confirmPassword && registerData.password !== registerData.confirmPassword,\n        helperText: registerData.confirmPassword && registerData.password !== registerData.confirmPassword ? 'Passwords do not match.' : ' '\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        name: \"cardNumber\",\n        label: \"Card Number\",\n        value: registerData.cardNumber,\n        onChange: updateField,\n        inputProps: {\n          maxLength: 16\n        },\n        error: registerData.cardNumber && !/^[\\d]{16}$/.test(registerData.cardNumber),\n        helperText: registerData.cardNumber && !/^[\\d]{16}$/.test(registerData.cardNumber) ? 'Card number must be 16 digits.' : ' '\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        name: \"cardCVC\",\n        label: \"CVC\",\n        value: registerData.cardCVC,\n        onChange: updateField,\n        inputProps: {\n          maxLength: 3\n        },\n        error: registerData.cardCVC && !/^\\d{3}$/.test(registerData.cardCVC),\n        helperText: registerData.cardCVC && !/^\\d{3}$/.test(registerData.cardCVC) ? 'CVC must be 3 digits.' : ' '\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        name: \"cardExpirationDate\",\n        label: \"Expiration Date (MM/YY)\",\n        value: registerData.cardExpirationDate,\n        onChange: handleExpirationDateChange,\n        inputProps: {\n          maxLength: 5\n        },\n        error: registerData.cardExpirationDate && !/^(0[1-9]|1[0-2])\\/\\d{2}$/.test(registerData.cardExpirationDate),\n        helperText: registerData.cardExpirationDate && !/^(0[1-9]|1[0-2])\\/\\d{2}$/.test(registerData.cardExpirationDate) ? 'Expiration date must be in the format MM/YY.' : ' '\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: handleBack,\n        size: \"large\",\n        sx: {\n          position: 'absolute',\n          left: theme.spacing(2),\n          top: theme.spacing(2),\n          backgroundColor: 'white',\n          color: 'primary.main',\n          '&:hover': {\n            backgroundColor: 'primary.light',\n            color: 'white'\n          },\n          boxShadow: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n          sx: {\n            fontSize: 28\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mt: 3,\n          mb: 2\n        },\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"text\",\n        onClick: () => navigate('/login-customer'),\n        children: \"Already have an account? Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n_s(RegisterCustomer, \"nbM0KmibDJfS2BNxu+Vh50Wdbns=\", false, function () {\n  return [useTheme, useNavigate];\n});\n_c = RegisterCustomer;\nexport default RegisterCustomer;\nvar _c;\n$RefreshReg$(_c, \"RegisterCustomer\");","map":{"version":3,"names":["React","useState","useNavigate","axios","TextField","Button","Typography","Box","useTheme","IconButton","ArrowBackIcon","Snackbar","jsxDEV","_jsxDEV","RegisterCustomer","_s","theme","navigate","openSnackbar","setOpenSnackbar","snackbarMessage","setSnackbarMessage","handleBack","registerData","setRegisterData","Name","email","password","confirmPassword","cardNumber","cardCVC","cardExpirationDate","updateField","e","target","name","value","handleExpirationDateChange","formattedValue","replace","substring","length","prevState","handleCloseSnackbar","event","reason","registerUser","preventDefault","response","post","headers","status","alert","setTimeout","error","data","sx","minHeight","display","flexDirection","justifyContent","alignItems","background","process","env","PUBLIC_URL","backgroundSize","backgroundPosition","p","spacing","children","width","mb","component","src","height","fileName","_jsxFileName","lineNumber","columnNumber","variant","color","fontWeight","textAlign","onSubmit","noValidate","maxWidth","backgroundColor","padding","borderRadius","shape","palette","primary","main","margin","required","fullWidth","id","label","autoComplete","autoFocus","onChange","helperText","open","autoHideDuration","onClose","message","action","size","onClick","CloseIcon","fontSize","test","type","inputProps","pattern","title","RegExp","maxLength","position","left","top","boxShadow","mt","_c","$RefreshReg$"],"sources":["/Users/hansijia/9900_/9900/frontend/src/pages/RegisterCustomer.jsx"],"sourcesContent":["//sijia han\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { TextField, Button, Typography, Box, useTheme } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { Snackbar } from '@mui/material';\n\n\n\nconst RegisterCustomer = () => {\n    const theme = useTheme();\n    const navigate = useNavigate();\n    const [openSnackbar, setOpenSnackbar] = useState(false);\n    const [snackbarMessage, setSnackbarMessage] = useState('');\n\n    \n    const handleBack = () => {\n        navigate(-1);\n    };\n    \n    const [registerData, setRegisterData] = useState({\n        Name: '',\n        email: '',\n        password: '',\n        confirmPassword: '',\n        cardNumber: '', // Assuming we're adding a card number for some reason\n        cardCVC: '', // Assuming we're adding CVC for some reason\n        cardExpirationDate: '', // Adding card expiration date in MM/YY format\n    });\n\n    const updateField = (e) => {\n        setRegisterData({\n            ...registerData,\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    const handleExpirationDateChange = (e) => {\n        const { value } = e.target;\n        let formattedValue = value.replace(\n            /[^0-9]/g, '' // Remove non-digit characters\n        ).substring(0, 4); // Limit length to 4 digits to fit MMYY\n\n        if (formattedValue.length > 2) {\n            formattedValue = formattedValue.substring(0, 2) + '/' + formattedValue.substring(2, 4);\n        }\n\n        setRegisterData(prevState => ({\n            ...prevState,\n            cardExpirationDate: formattedValue\n        }));\n    };\n    \n    const handleCloseSnackbar = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpenSnackbar(false);\n    };\n    \n    const registerUser = async (e) => {\n        e.preventDefault();\n\n        // Your existing validation and registration logic here\n\n        try {\n            const response = await axios.post('http://localhost:5005/user/auth/register', registerData, {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            });\n\n            if (response.status === 200) {\n                alert('Registration successful');\n                setOpenSnackbar(true);\n                // 使用 setTimeout 来延迟跳转，给用户显示消息的时间\n                setTimeout(() => {\n                    navigate('/');\n                }, 3000); // 3秒后跳转\n            }\n        } catch (error) {\n            // Check if the error has a response object\n            if (error.response) {\n                // Handle HTTP errors (errors with response from the server)\n                alert(error.response.data.error || \"An error occurred during registration.\");\n            } else {\n                // Handle non-HTTP errors (e.g., network errors)\n                alert(\"A network error occurred, or the server did not respond.\");\n            }\n        }\n    };\n\n    return (\n        <Box sx={{\n            minHeight: '100vh',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center',\n            background: `url(${process.env.PUBLIC_URL}/default_background.jpg), linear-gradient(to right, #e66465, #9198e5)`,\n            backgroundSize: 'cover, cover',\n            backgroundPosition: 'center, center',\n            p: theme.spacing(2),\n        }}>\n            {/* Content and styling similar to the provided structure */}\n            <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', width: '100%', mb: theme.spacing(4) }}>\n                <Box component=\"img\" src={`${process.env.PUBLIC_URL}/LogoImage.jpg`} sx={{ width: 150, height: 'auto', mb: 2 }} />\n                <Typography variant=\"h3\" color=\"white\" sx={{ fontWeight: 'bold', textAlign: 'center' }}>\n                    Join Our Amazing Ticket Platform\n                </Typography>\n            </Box>\n            <Box component=\"form\" onSubmit={registerUser} noValidate sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', width: '100%', maxWidth: 600, backgroundColor: 'rgba(255, 255, 255, 0.8)', padding: theme.spacing(4), borderRadius: theme.shape.borderRadius }}>\n                <Typography variant=\"h4\" sx={{ mb: 3, fontWeight: 'bold', color: theme.palette.primary.main }}>\n                    Create Your Customer Account\n                </Typography>\n                <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"Name\"\n                    label=\"Name\"\n                    name=\"Name\"\n                    autoComplete=\"name\"\n                    autoFocus\n                    value={registerData.Name}\n                    onChange={updateField}\n\n                    error={registerData.Name && (registerData.Name.length < 3 || registerData.Name.length > 100)}\n                    helperText={\n                         registerData.Name\n                            ? (registerData.Name.length < 3\n                                   ? 'Name must be at least 3 characters long.'\n                                   : registerData.Name.length > 100\n                                  ? 'Name cannot be more than 100 characters long.'\n                                   : '')\n                             : ' '\n                                }\n                />\n                 <Snackbar\n                open={openSnackbar}\n                autoHideDuration={6000}\n                onClose={handleCloseSnackbar}\n                message={snackbarMessage}\n                action={\n                    <IconButton\n                        size=\"small\"\n                        aria-label=\"close\"\n                        color=\"inherit\"\n                        onClick={handleCloseSnackbar}\n                    >\n                        <CloseIcon fontSize=\"small\" />\n                    </IconButton>\n                }\n            />\n                <TextField\n                    error={!/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(registerData.email) && registerData.email !== ''}\n                    helperText={!/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(registerData.email) && registerData.email !== '' ? 'Enter a valid email address.' : ' '}\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Email Address\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    value={registerData.email}\n                    onChange={updateField}\n                />\n                <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    id=\"password\"\n                    autoComplete=\"new-password\"\n                    value={registerData.password}\n                    onChange={updateField}\n                    inputProps={{\n                        pattern: \"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}\",\n                        title: \"Password must be at least 6 characters long, include a number, a lowercase letter, and an uppercase letter.\"\n                    }}\n                    // Include the error and helperText properties using the same pattern and title\n                    error={registerData.password && !new RegExp(\"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}\").test(registerData.password)}\n                    helperText={registerData.password && !new RegExp(\"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}\").test(registerData.password) ? \"Password must be at least 6 characters long, include a number, a lowercase letter, and an uppercase letter.\" : ' '}\n                />\n                <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"confirmPassword\"\n                    label=\"Confirm Password\"\n                    type=\"password\"\n                    id=\"confirmPassword\"\n                    autoComplete=\"new-password\"\n                    value={registerData.confirmPassword}\n                    onChange={updateField}\n                    error={registerData.confirmPassword && registerData.password !== registerData.confirmPassword}\n                    helperText={registerData.confirmPassword && registerData.password !== registerData.confirmPassword ? 'Passwords do not match.' : ' '}\n                />\n                {/* Assuming card details are needed for host registration */}\n                <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"cardNumber\"\n                    label=\"Card Number\"\n                    value={registerData.cardNumber}\n                    onChange={updateField}\n                    inputProps={{ maxLength: 16 }}\n                    error={registerData.cardNumber && !/^[\\d]{16}$/.test(registerData.cardNumber)}\n                    helperText={registerData.cardNumber && !/^[\\d]{16}$/.test(registerData.cardNumber) ? 'Card number must be 16 digits.' : ' '}\n                />\n                <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"cardCVC\"\n                    label=\"CVC\"\n                    value={registerData.cardCVC}\n                    onChange={updateField}\n                    inputProps={{ maxLength: 3 }}\n                    error={registerData.cardCVC && !/^\\d{3}$/.test(registerData.cardCVC)}\n                    helperText={registerData.cardCVC && !/^\\d{3}$/.test(registerData.cardCVC) ? 'CVC must be 3 digits.' : ' '}\n                    \n                />\n                <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"cardExpirationDate\"\n                    label=\"Expiration Date (MM/YY)\"\n                    value={registerData.cardExpirationDate}\n                    onChange={handleExpirationDateChange}\n                    inputProps={{ maxLength: 5 }}\n                    error={registerData.cardExpirationDate && !/^(0[1-9]|1[0-2])\\/\\d{2}$/.test(registerData.cardExpirationDate)}\n                    helperText={\n                        registerData.cardExpirationDate && !/^(0[1-9]|1[0-2])\\/\\d{2}$/.test(registerData.cardExpirationDate)\n                            ? 'Expiration date must be in the format MM/YY.'\n                            : ' '\n                    }\n                />\n                <IconButton\n                       onClick={handleBack}\n                       size=\"large\"\n                        sx={{\n                             position: 'absolute',\n                             left: theme.spacing(2),\n                             top: theme.spacing(2),\n                             backgroundColor: 'white',\n                             color: 'primary.main',\n                              '&:hover': {\n                                 backgroundColor: 'primary.light',\n                                 color: 'white',\n                                   },\n                              boxShadow: 3,\n                            }}\n                 >\n    <ArrowBackIcon sx={{ fontSize: 28 }} />\n</IconButton>\n\n                <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    sx={{ mt: 3, mb: 2 }}\n                >\n                    Register\n                </Button>\n                <Button\n                    fullWidth\n                    variant=\"text\"\n                    onClick={() => navigate('/login-customer')}\n                >\n                    Already have an account? Login\n                </Button>\n            </Box>\n        </Box>\n    );\n};\n\nexport default RegisterCustomer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}