{"ast":null,"code":"var _jsxFileName = \"/Users/hansijia/9900_/9900/frontend/src/pages/RegisterCustomer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { TextField, Button, Typography, Box, useTheme } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RegisterCustomer = () => {\n  _s();\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const [openDialog, setOpenDialog] = useState(false);\n  const [registerData, setRegisterData] = useState({\n    Name: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    cardNumber: '',\n    // Assuming we're adding a card number for some reason\n    cardCVC: '',\n    // Assuming we're adding CVC for some reason\n    cardExpirationDate: '' // Adding card expiration date in MM/YY format\n  });\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n  const handleCloseSnackbar = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpenSnackbar(false);\n  };\n  const updateField = e => {\n    setRegisterData(prevState => ({\n      ...prevState,\n      [e.target.name]: e.target.value\n    }));\n  };\n  const handleBack = () => navigate(-1);\n  const handleExpirationDateChange = e => {\n    const {\n      value\n    } = e.target;\n    let formattedValue = value.replace(/[^0-9]/g, '' // Remove non-digit characters\n    ).substring(0, 4); // Limit length to 4 digits to fit MMYY\n\n    if (formattedValue.length > 2) {\n      formattedValue = formattedValue.substring(0, 2) + '/' + formattedValue.substring(2, 4);\n    }\n    setRegisterData(prevState => ({\n      ...prevState,\n      cardExpirationDate: formattedValue\n    }));\n  };\n  const registerUser = async e => {\n    e.preventDefault();\n    const checkEmailUrl = 'http://localhost:5005/user/auth/register';\n    try {\n      // Check if the email is already in use by a host\n      const emailCheckResponse = await axios.post(checkEmailUrl, {\n        email: registerData.email\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Assuming the endpoint returns a boolean flag indicating if the email is in use\n      if (emailCheckResponse.data.isEmailInUse) {\n        setSnackbarMessage('This email is already in use by a host. Please use a different email.');\n        setOpenSnackbar(true);\n        return;\n      }\n\n      // Proceed with registration if the email is not in use\n      const response = await axios.post('http://localhost:5005/user/auth/register', registerData, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.status === 201) {\n        setSnackbarMessage(\"Registration successful!\");\n        setOpenSnackbar(true);\n        setTimeout(() => {\n          navigate('/login-customer');\n        }, 2000); // Adjust delay as necessary\n      }\n    } catch (errorResponse) {\n      // Handle registration errors\n      let errorMessage = 'An unexpected error occurred during registration.';\n      if (errorResponse.response) {\n        const status = errorResponse.response.status;\n        const message = errorResponse.response.data.message;\n        if (status === 400) {\n          // Custom error message for duplicate email\n          errorMessage = message.includes('email already exists') ? 'This email is already in use. Please use a different email address.' : message;\n        }\n      }\n      setSnackbarMessage(errorMessage);\n      setOpenSnackbar(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        minHeight: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        background: `url(${process.env.PUBLIC_URL}/default_background.jpg), linear-gradient(to right, #e66465, #9198e5)`,\n        backgroundSize: 'cover, cover',\n        backgroundPosition: 'center, center',\n        p: theme.spacing(2)\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          width: '100%',\n          mb: theme.spacing(4)\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          component: \"img\",\n          src: `${process.env.PUBLIC_URL}/LogoImage.jpg`,\n          sx: {\n            width: 150,\n            height: 'auto',\n            mb: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          color: \"white\",\n          sx: {\n            fontWeight: 'bold',\n            textAlign: 'center'\n          },\n          children: \"Join Our Amazing Ticket Platform\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: registerUser,\n        noValidate: true,\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          width: '100%',\n          maxWidth: 600,\n          backgroundColor: 'rgba(255, 255, 255, 0.8)',\n          padding: theme.spacing(4),\n          borderRadius: theme.shape.borderRadius\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          sx: {\n            mb: 3,\n            fontWeight: 'bold',\n            color: theme.palette.primary.main\n          },\n          children: \"Create Your Customer Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          id: \"Name\",\n          label: \"Name\",\n          name: \"Name\",\n          autoComplete: \"name\",\n          autoFocus: true,\n          value: registerData.Name,\n          onChange: updateField,\n          error: registerData.Name && (registerData.Name.length < 3 || registerData.Name.length > 100 || /\\s/.test(registerData.Name)),\n          helperText: registerData.Name ? /\\s/.test(registerData.Name) ? 'Name cannot include spaces.' : registerData.Name.length < 3 ? 'Name must be at least 3 characters long.' : registerData.Name.length > 100 ? 'Name cannot be more than 100 characters long.' : '' : ' '\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          error: !/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(registerData.email) && registerData.email !== '',\n          helperText: !/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(registerData.email) && registerData.email !== '' ? 'Enter a valid email address.' : ' ',\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          id: \"email\",\n          label: \"Email Address\",\n          name: \"email\",\n          autoComplete: \"email\",\n          value: registerData.email,\n          onChange: updateField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"password\",\n          label: \"Password\",\n          type: \"password\",\n          id: \"password\",\n          autoComplete: \"new-password\",\n          value: registerData.password,\n          onChange: updateField,\n          inputProps: {\n            pattern: \"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}\",\n            title: \"Password must be at least 6 characters long, include a number, a lowercase letter, and an uppercase letter.\"\n          }\n          // Include the error and helperText properties using the same pattern and title\n          ,\n          error: registerData.password && !new RegExp(\"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}\").test(registerData.password),\n          helperText: registerData.password && !new RegExp(\"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}\").test(registerData.password) ? \"Password must be at least 6 characters long, include a number, a lowercase letter, and an uppercase letter.\" : ' '\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"confirmPassword\",\n          label: \"Confirm Password\",\n          type: \"password\",\n          id: \"confirmPassword\",\n          autoComplete: \"new-password\",\n          value: registerData.confirmPassword,\n          onChange: updateField,\n          error: registerData.confirmPassword && registerData.password !== registerData.confirmPassword,\n          helperText: registerData.confirmPassword && registerData.password !== registerData.confirmPassword ? 'Passwords do not match.' : ' '\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"cardNumber\",\n          label: \"Card Number\",\n          value: registerData.cardNumber,\n          onChange: updateField,\n          inputProps: {\n            maxLength: 16\n          },\n          error: registerData.cardNumber && !/^[\\d]{16}$/.test(registerData.cardNumber),\n          helperText: registerData.cardNumber && !/^[\\d]{16}$/.test(registerData.cardNumber) ? 'Card number must be 16 digits.' : ' '\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"cardCVC\",\n          label: \"CVC\",\n          value: registerData.cardCVC,\n          onChange: updateField,\n          inputProps: {\n            maxLength: 3\n          },\n          error: registerData.cardCVC && !/^\\d{3}$/.test(registerData.cardCVC),\n          helperText: registerData.cardCVC && !/^\\d{3}$/.test(registerData.cardCVC) ? 'CVC must be 3 digits.' : ' '\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"cardExpirationDate\",\n          label: \"Expiration Date (MM/YY)\",\n          value: registerData.cardExpirationDate,\n          onChange: handleExpirationDateChange,\n          inputProps: {\n            maxLength: 5\n          },\n          error: registerData.cardExpirationDate && !/^(0[1-9]|1[0-2])\\/\\d{2}$/.test(registerData.cardExpirationDate),\n          helperText: registerData.cardExpirationDate && !/^(0[1-9]|1[0-2])\\/\\d{2}$/.test(registerData.cardExpirationDate) ? 'Expiration date must be in the format MM/YY.' : ' '\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleBack,\n          size: \"large\",\n          sx: {\n            position: 'absolute',\n            left: theme.spacing(2),\n            top: theme.spacing(2),\n            backgroundColor: 'white',\n            color: 'primary.main',\n            '&:hover': {\n              backgroundColor: 'primary.light',\n              color: 'white'\n            },\n            boxShadow: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n            sx: {\n              fontSize: 28\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          sx: {\n            mt: 3,\n            mb: 2\n          },\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          variant: \"text\",\n          onClick: () => navigate('/login-customer'),\n          children: \"Already have an account? Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n};\n_s(RegisterCustomer, \"A68nHA0C3OQu0oqOGzkeTVTDPgw=\", false, function () {\n  return [useTheme, useNavigate];\n});\n_c = RegisterCustomer;\nexport default RegisterCustomer;\nvar _c;\n$RefreshReg$(_c, \"RegisterCustomer\");","map":{"version":3,"names":["React","useState","useNavigate","axios","TextField","Button","Typography","Box","useTheme","IconButton","ArrowBackIcon","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","jsxDEV","_jsxDEV","Fragment","_Fragment","RegisterCustomer","_s","theme","navigate","openDialog","setOpenDialog","registerData","setRegisterData","Name","email","password","confirmPassword","cardNumber","cardCVC","cardExpirationDate","openSnackbar","setOpenSnackbar","snackbarMessage","setSnackbarMessage","handleCloseSnackbar","event","reason","updateField","e","prevState","target","name","value","handleBack","handleExpirationDateChange","formattedValue","replace","substring","length","registerUser","preventDefault","checkEmailUrl","emailCheckResponse","post","headers","data","isEmailInUse","response","status","setTimeout","errorResponse","errorMessage","message","includes","children","sx","minHeight","display","flexDirection","justifyContent","alignItems","background","process","env","PUBLIC_URL","backgroundSize","backgroundPosition","p","spacing","width","mb","component","src","height","fileName","_jsxFileName","lineNumber","columnNumber","variant","color","fontWeight","textAlign","onSubmit","noValidate","maxWidth","backgroundColor","padding","borderRadius","shape","palette","primary","main","margin","required","fullWidth","id","label","autoComplete","autoFocus","onChange","error","test","helperText","type","inputProps","pattern","title","RegExp","maxLength","onClick","size","position","left","top","boxShadow","fontSize","mt","_c","$RefreshReg$"],"sources":["/Users/hansijia/9900_/9900/frontend/src/pages/RegisterCustomer.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { TextField, Button, Typography, Box, useTheme } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@mui/material';\n\n\n\nconst RegisterCustomer = () => {\n    const theme = useTheme();\n    const navigate = useNavigate();\n\n    const [openDialog, setOpenDialog] = useState(false);\n\n    \n    const [registerData, setRegisterData] = useState({\n        Name: '',\n        email: '',\n        password: '',\n        confirmPassword: '',\n        cardNumber: '', // Assuming we're adding a card number for some reason\n        cardCVC: '', // Assuming we're adding CVC for some reason\n        cardExpirationDate: '', // Adding card expiration date in MM/YY format\n    });\n\n    const [openSnackbar, setOpenSnackbar] = useState(false);\n    const [snackbarMessage, setSnackbarMessage] = useState('');\n    \n    const handleCloseSnackbar = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpenSnackbar(false);\n    };\n    const updateField = (e) => {\n        setRegisterData(prevState => ({\n            ...prevState,\n            [e.target.name]: e.target.value,\n        }));\n    };\n\n    const handleBack = () => navigate(-1);\n\n    const handleExpirationDateChange = (e) => {\n        const { value } = e.target;\n        let formattedValue = value.replace(\n            /[^0-9]/g, '' // Remove non-digit characters\n        ).substring(0, 4); // Limit length to 4 digits to fit MMYY\n\n        if (formattedValue.length > 2) {\n            formattedValue = formattedValue.substring(0, 2) + '/' + formattedValue.substring(2, 4);\n        }\n\n        setRegisterData(prevState => ({\n            ...prevState,\n            cardExpirationDate: formattedValue\n        }));\n    };\n    \n    const registerUser = async (e) => {\n        e.preventDefault();\n        const checkEmailUrl = 'http://localhost:5005/user/auth/register';\n\n        try {\n            // Check if the email is already in use by a host\n            const emailCheckResponse = await axios.post(checkEmailUrl, { email: registerData.email }, {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            });\n\n            // Assuming the endpoint returns a boolean flag indicating if the email is in use\n            if (emailCheckResponse.data.isEmailInUse) {\n                setSnackbarMessage('This email is already in use by a host. Please use a different email.');\n                setOpenSnackbar(true);\n                return;\n            }\n\n            // Proceed with registration if the email is not in use\n            const response = await axios.post('http://localhost:5005/user/auth/register', registerData, {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            });\n\n            if (response.status === 201) {\n                setSnackbarMessage(\"Registration successful!\");\n                setOpenSnackbar(true);\n                setTimeout(() => {\n                    navigate('/login-customer');\n                }, 2000); // Adjust delay as necessary\n            }\n        } catch (errorResponse) {\n            // Handle registration errors\n            let errorMessage = 'An unexpected error occurred during registration.';\n            if (errorResponse.response) {\n                const status = errorResponse.response.status;\n                const message = errorResponse.response.data.message;\n    \n                if (status === 400) {\n                    // Custom error message for duplicate email\n                    errorMessage = message.includes('email already exists') ? 'This email is already in use. Please use a different email address.' : message;\n                }\n            }\n            setSnackbarMessage(errorMessage);\n            setOpenSnackbar(true);\n        }\n    };\n    return (\n        <><Box sx={{\n            minHeight: '100vh',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center',\n            background: `url(${process.env.PUBLIC_URL}/default_background.jpg), linear-gradient(to right, #e66465, #9198e5)`,\n            backgroundSize: 'cover, cover',\n            backgroundPosition: 'center, center',\n            p: theme.spacing(2),\n        }}>\n            {/* Content and styling similar to the provided structure */}\n            <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', width: '100%', mb: theme.spacing(4) }}>\n                <Box component=\"img\" src={`${process.env.PUBLIC_URL}/LogoImage.jpg`} sx={{ width: 150, height: 'auto', mb: 2 }} />\n                <Typography variant=\"h3\" color=\"white\" sx={{ fontWeight: 'bold', textAlign: 'center' }}>\n                    Join Our Amazing Ticket Platform\n                </Typography>\n            </Box>\n            <Box component=\"form\" onSubmit={registerUser} noValidate sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', width: '100%', maxWidth: 600, backgroundColor: 'rgba(255, 255, 255, 0.8)', padding: theme.spacing(4), borderRadius: theme.shape.borderRadius }}>\n                <Typography variant=\"h4\" sx={{ mb: 3, fontWeight: 'bold', color: theme.palette.primary.main }}>\n                    Create Your Customer Account\n                </Typography>\n                <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"Name\"\n                    label=\"Name\"\n                    name=\"Name\"\n                    autoComplete=\"name\"\n                    autoFocus\n                    value={registerData.Name}\n                    onChange={updateField}\n\n                    error={registerData.Name && (registerData.Name.length < 3 || registerData.Name.length > 100 || /\\s/.test(registerData.Name))}\n                    helperText={registerData.Name\n                        ? (/\\s/.test(registerData.Name)\n                        ? 'Name cannot include spaces.'\n                        :\n                            registerData.Name.length < 3\n                            ? 'Name must be at least 3 characters long.'\n                            : registerData.Name.length > 100\n                                ? 'Name cannot be more than 100 characters long.'\n                                : '')\n                        : ' '} />\n                <TextField\n                    error={!/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(registerData.email) && registerData.email !== ''}\n                    helperText={!/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(registerData.email) && registerData.email !== '' ? 'Enter a valid email address.' : ' '}\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Email Address\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    value={registerData.email}\n                    onChange={updateField} />\n                <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    id=\"password\"\n                    autoComplete=\"new-password\"\n                    value={registerData.password}\n                    onChange={updateField}\n                    inputProps={{\n                        pattern: \"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}\",\n                        title: \"Password must be at least 6 characters long, include a number, a lowercase letter, and an uppercase letter.\"\n                    }}\n                    // Include the error and helperText properties using the same pattern and title\n                    error={registerData.password && !new RegExp(\"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}\").test(registerData.password)}\n                    helperText={registerData.password && !new RegExp(\"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}\").test(registerData.password) ? \"Password must be at least 6 characters long, include a number, a lowercase letter, and an uppercase letter.\" : ' '} />\n                <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"confirmPassword\"\n                    label=\"Confirm Password\"\n                    type=\"password\"\n                    id=\"confirmPassword\"\n                    autoComplete=\"new-password\"\n                    value={registerData.confirmPassword}\n                    onChange={updateField}\n                    error={registerData.confirmPassword && registerData.password !== registerData.confirmPassword}\n                    helperText={registerData.confirmPassword && registerData.password !== registerData.confirmPassword ? 'Passwords do not match.' : ' '} />\n                {/* Assuming card details are needed for host registration */}\n                <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"cardNumber\"\n                    label=\"Card Number\"\n                    value={registerData.cardNumber}\n                    onChange={updateField}\n                    inputProps={{ maxLength: 16 }}\n                    error={registerData.cardNumber && !/^[\\d]{16}$/.test(registerData.cardNumber)}\n                    helperText={registerData.cardNumber && !/^[\\d]{16}$/.test(registerData.cardNumber) ? 'Card number must be 16 digits.' : ' '} />\n                <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"cardCVC\"\n                    label=\"CVC\"\n                    value={registerData.cardCVC}\n                    onChange={updateField}\n                    inputProps={{ maxLength: 3 }}\n                    error={registerData.cardCVC && !/^\\d{3}$/.test(registerData.cardCVC)}\n                    helperText={registerData.cardCVC && !/^\\d{3}$/.test(registerData.cardCVC) ? 'CVC must be 3 digits.' : ' '} />\n                <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"cardExpirationDate\"\n                    label=\"Expiration Date (MM/YY)\"\n                    value={registerData.cardExpirationDate}\n                    onChange={handleExpirationDateChange}\n                    inputProps={{ maxLength: 5 }}\n                    error={registerData.cardExpirationDate && !/^(0[1-9]|1[0-2])\\/\\d{2}$/.test(registerData.cardExpirationDate)}\n                    helperText={registerData.cardExpirationDate && !/^(0[1-9]|1[0-2])\\/\\d{2}$/.test(registerData.cardExpirationDate)\n                        ? 'Expiration date must be in the format MM/YY.'\n                        : ' '} />\n                \n                \n                <IconButton\n                    onClick={handleBack}\n                    size=\"large\"\n                    sx={{\n                        position: 'absolute',\n                        left: theme.spacing(2),\n                        top: theme.spacing(2),\n                        backgroundColor: 'white',\n                        color: 'primary.main',\n                        '&:hover': {\n                            backgroundColor: 'primary.light',\n                            color: 'white',\n                        },\n                        boxShadow: 3,\n                    }}\n                >\n                    <ArrowBackIcon sx={{ fontSize: 28 }} />\n                </IconButton>\n\n                <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    sx={{ mt: 3, mb: 2 }}\n                >\n                    Register\n                </Button>\n                <Button\n                    fullWidth\n                    variant=\"text\"\n                    onClick={() => navigate('/login-customer')}\n                >\n                    Already have an account? Login\n                </Button>\n            </Box>\n        </Box>           \n    </>\n    );\n\n};\n\nexport default RegisterCustomer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}