{"ast":null,"code":"var _jsxFileName = \"/Users/hansijia/9900_/9900/frontend/src/pages/RegisterCustomer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { TextField, Button, Typography, Box, useTheme, IconButton, Snackbar } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RegisterCustomer = () => {\n  _s();\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const [registerData, setRegisterData] = useState({\n    Name: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    cardNumber: '',\n    cardCVC: '',\n    cardExpirationDate: ''\n  });\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n  const [snackbarType, setSnackbarType] = useState('info');\n  const [expirationDateError, setExpirationDateError] = useState('');\n  const handleCloseSnackbar = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpenSnackbar(false);\n  };\n  const updateField = e => {\n    setRegisterData(prevState => ({\n      ...prevState,\n      [e.target.name]: e.target.value\n    }));\n  };\n  const handleBack = () => navigate(-1);\n  const validateExpirationDate = expiration => {\n    if (!/^(0[1-9]|1[0-2])\\/\\d{2}$/.test(expiration)) {\n      return false;\n    }\n    const [expMonth, expYear] = expiration.split('/');\n    const currentYear = new Date().getFullYear() % 100;\n    const currentMonth = new Date().getMonth() + 1;\n    if (parseInt(expYear, 10) < currentYear || parseInt(expYear, 10) === currentYear && parseInt(expMonth, 10) < currentMonth) {\n      return false;\n    }\n    return true;\n  };\n  const handleExpirationDateChange = e => {\n    const {\n      value\n    } = e.target;\n    let formattedValue = value.replace(/[^0-9]/g, '').substring(0, 4);\n    if (formattedValue.length > 2) {\n      formattedValue = `${formattedValue.substring(0, 2)}/${formattedValue.substring(2, 4)}`;\n    }\n    setRegisterData(prevState => ({\n      ...prevState,\n      cardExpirationDate: formattedValue\n    }));\n    const isValidDate = validateExpirationDate(formattedValue);\n    setExpirationDateError(isValidDate ? '' : 'Expiration date must be in the future and mm/yy.');\n  };\n  const registerUser = async e => {\n    e.preventDefault();\n\n    // Check if the card expiration date is valid\n    if (!validateExpirationDate(registerData.cardExpirationDate)) {\n      setExpirationDateError('Expiration date must be in the future.');\n      setOpenSnackbar(true);\n      setSnackbarMessage('Expiration date must be in the future.');\n      setSnackbarType('error');\n      return;\n    }\n\n    // Check if passwords match\n    if (registerData.password !== registerData.confirmPassword) {\n      setExpirationDateError('');\n      setOpenSnackbar(true);\n      setSnackbarMessage(\"Passwords do not match.\");\n      setSnackbarType('error');\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:5005/user/auth/register', {\n        Name: registerData.Name,\n        email: registerData.email,\n        password: registerData.password,\n        cardNumber: registerData.cardNumber,\n        cardCVC: registerData.cardCVC,\n        cardExpirationDate: registerData.cardExpirationDate\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.status === 201) {\n        setSnackbarMessage(\"Registration successful!\");\n        setSnackbarType('success');\n        setOpenSnackbar(true);\n        setTimeout(() => navigate('/login-customer'), 2000);\n      }\n    } catch (errorResponse) {\n      var _errorResponse$respon, _errorResponse$respon2;\n      const errorMessage = ((_errorResponse$respon = errorResponse.response) === null || _errorResponse$respon === void 0 ? void 0 : (_errorResponse$respon2 = _errorResponse$respon.data) === null || _errorResponse$respon2 === void 0 ? void 0 : _errorResponse$respon2.message) || 'An unexpected error occurred during registration.';\n      setOpenSnackbar(true);\n      setSnackbarMessage(errorMessage);\n      setSnackbarType('error');\n    }\n  };\n  const action = /*#__PURE__*/_jsxDEV(IconButton, {\n    size: \"small\",\n    \"aria-label\": \"close\",\n    color: \"inherit\",\n    onClick: handleCloseSnackbar,\n    children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n      fontSize: \"small\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n      open: openSnackbar,\n      autoHideDuration: 6000,\n      onClose: handleCloseSnackbar,\n      message: snackbarMessage,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      ContentProps: {\n        style: {\n          backgroundColor: snackbarType === 'success' ? theme.palette.success.main : theme.palette.error.main\n        }\n      },\n      action: action\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        minHeight: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        background: `url(${process.env.PUBLIC_URL}/default_background.jpg), linear-gradient(to right, #e66465, #9198e5)`,\n        backgroundSize: 'cover, cover',\n        backgroundPosition: 'center, center',\n        p: theme.spacing(2)\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          width: '100%',\n          mb: theme.spacing(4)\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          component: \"img\",\n          src: `${process.env.PUBLIC_URL}/LogoImage.jpg`,\n          sx: {\n            width: 150,\n            height: 'auto',\n            mb: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          color: \"white\",\n          sx: {\n            fontWeight: 'bold',\n            textAlign: 'center'\n          },\n          children: \"Join Our Amazing Ticket Platform\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: registerUser,\n        noValidate: true,\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          width: '100%',\n          maxWidth: 600,\n          backgroundColor: 'rgba(255, 255, 255, 0.8)',\n          padding: theme.spacing(4),\n          borderRadius: theme.shape.borderRadius\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          sx: {\n            mb: 3,\n            fontWeight: 'bold',\n            color: theme.palette.primary.main\n          },\n          children: \"Create Your Customer Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          id: \"Name\",\n          label: \"Name\",\n          name: \"Name\",\n          autoComplete: \"name\",\n          autoFocus: true,\n          value: registerData.Name,\n          onChange: updateField,\n          error: registerData.Name && (registerData.Name.length < 3 || registerData.Name.length > 100 || /\\s/.test(registerData.Name)),\n          helperText: registerData.Name ? /\\s/.test(registerData.Name) ? 'Name cannot include spaces.' : registerData.Name.length < 3 ? 'Name must be at least 3 characters long.' : registerData.Name.length > 100 ? 'Name cannot be more than 100 characters long.' : '' : ' '\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          error: !/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(registerData.email) && registerData.email !== '',\n          helperText: !/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(registerData.email) && registerData.email !== '' ? 'Enter a valid email address.' : ' ',\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          id: \"email\",\n          label: \"Email Address\",\n          name: \"email\",\n          autoComplete: \"email\",\n          value: registerData.email,\n          onChange: updateField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"password\",\n          label: \"Password\",\n          type: \"password\",\n          id: \"password\",\n          autoComplete: \"new-password\",\n          value: registerData.password,\n          onChange: updateField,\n          inputProps: {\n            pattern: \"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}\",\n            title: \"Password must be at least 6 characters long, include a number, a lowercase letter, and an uppercase letter.\"\n          }\n          // Include the error and helperText properties using the same pattern and title\n          ,\n          error: registerData.password && !new RegExp(\"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}\").test(registerData.password),\n          helperText: registerData.password && !new RegExp(\"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}\").test(registerData.password) ? \"Password must be at least 6 characters long, include a number, a lowercase letter, and an uppercase letter.\" : ' '\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"confirmPassword\",\n          label: \"Confirm Password\",\n          type: \"password\",\n          id: \"confirmPassword\",\n          autoComplete: \"new-password\",\n          value: registerData.confirmPassword,\n          onChange: updateField,\n          error: registerData.confirmPassword && registerData.password !== registerData.confirmPassword,\n          helperText: registerData.confirmPassword && registerData.password !== registerData.confirmPassword ? 'Passwords do not match.' : ' '\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"cardNumber\",\n          label: \"Card Number\",\n          value: registerData.cardNumber,\n          onChange: updateField,\n          inputProps: {\n            maxLength: 16\n          },\n          error: registerData.cardNumber && !/^[\\d]{16}$/.test(registerData.cardNumber),\n          helperText: registerData.cardNumber && !/^[\\d]{16}$/.test(registerData.cardNumber) ? 'Card number must be 16 digits.' : ' '\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"cardCVC\",\n          label: \"CVC\",\n          value: registerData.cardCVC,\n          onChange: updateField,\n          inputProps: {\n            maxLength: 3\n          },\n          error: registerData.cardCVC && !/^\\d{3}$/.test(registerData.cardCVC),\n          helperText: registerData.cardCVC && !/^\\d{3}$/.test(registerData.cardCVC) ? 'CVC must be 3 digits.' : ' '\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"cardExpirationDate\",\n          label: \"Expiration Date (MM/YY)\",\n          value: registerData.cardExpirationDate,\n          onChange: handleExpirationDateChange,\n          inputProps: {\n            maxLength: 5\n          },\n          error: !!expirationDateError // Error state derived from expirationDateError\n          ,\n          helperText: expirationDateError // Display the error message from expirationDateError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleBack,\n          size: \"large\",\n          sx: {\n            position: 'absolute',\n            left: theme.spacing(2),\n            top: theme.spacing(2),\n            backgroundColor: 'white',\n            color: 'primary.main',\n            '&:hover': {\n              backgroundColor: 'primary.light',\n              color: 'white'\n            },\n            boxShadow: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n            sx: {\n              fontSize: 28\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          sx: {\n            mt: 3,\n            mb: 2\n          },\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          variant: \"text\",\n          onClick: () => navigate('/login-customer'),\n          children: \"Already have an account? Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(RegisterCustomer, \"MHUET8UqI1exsLmfXxtMVNqExTI=\", false, function () {\n  return [useTheme, useNavigate];\n});\n_c = RegisterCustomer;\nexport default RegisterCustomer;\nvar _c;\n$RefreshReg$(_c, \"RegisterCustomer\");","map":{"version":3,"names":["React","useState","useNavigate","axios","TextField","Button","Typography","Box","useTheme","IconButton","Snackbar","ArrowBackIcon","CloseIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","RegisterCustomer","_s","theme","navigate","registerData","setRegisterData","Name","email","password","confirmPassword","cardNumber","cardCVC","cardExpirationDate","openSnackbar","setOpenSnackbar","snackbarMessage","setSnackbarMessage","snackbarType","setSnackbarType","expirationDateError","setExpirationDateError","handleCloseSnackbar","event","reason","updateField","e","prevState","target","name","value","handleBack","validateExpirationDate","expiration","test","expMonth","expYear","split","currentYear","Date","getFullYear","currentMonth","getMonth","parseInt","handleExpirationDateChange","formattedValue","replace","substring","length","isValidDate","registerUser","preventDefault","response","post","headers","status","setTimeout","errorResponse","_errorResponse$respon","_errorResponse$respon2","errorMessage","data","message","action","size","color","onClick","children","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","ContentProps","style","backgroundColor","palette","success","main","error","sx","minHeight","display","flexDirection","justifyContent","alignItems","background","process","env","PUBLIC_URL","backgroundSize","backgroundPosition","p","spacing","width","mb","component","src","height","variant","fontWeight","textAlign","onSubmit","noValidate","maxWidth","padding","borderRadius","shape","primary","margin","required","fullWidth","id","label","autoComplete","autoFocus","onChange","helperText","type","inputProps","pattern","title","RegExp","maxLength","position","left","top","boxShadow","mt","_c","$RefreshReg$"],"sources":["/Users/hansijia/9900_/9900/frontend/src/pages/RegisterCustomer.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { TextField, Button, Typography, Box, useTheme, IconButton, Snackbar } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport CloseIcon from '@mui/icons-material/Close';\n\nconst RegisterCustomer = () => {\n    const theme = useTheme();\n    const navigate = useNavigate();\n\n    const [registerData, setRegisterData] = useState({\n        Name: '',\n        email: '',\n        password: '',\n        confirmPassword: '',\n        cardNumber: '',\n        cardCVC: '',\n        cardExpirationDate: '',\n    });\n\n    const [openSnackbar, setOpenSnackbar] = useState(false);\n    const [snackbarMessage, setSnackbarMessage] = useState('');\n    const [snackbarType, setSnackbarType] = useState('info');\n    const [expirationDateError, setExpirationDateError] = useState('');\n\n    const handleCloseSnackbar = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpenSnackbar(false);\n    };\n\n    const updateField = (e) => {\n        setRegisterData((prevState) => ({\n            ...prevState,\n            [e.target.name]: e.target.value,\n        }));\n    };\n\n    const handleBack = () => navigate(-1);\n\n    const validateExpirationDate = (expiration) => {\n        if (!/^(0[1-9]|1[0-2])\\/\\d{2}$/.test(expiration)) {\n            return false;\n        }\n\n        const [expMonth, expYear] = expiration.split('/');\n        const currentYear = new Date().getFullYear() % 100;\n        const currentMonth = new Date().getMonth() + 1;\n\n        if (parseInt(expYear, 10) < currentYear || (parseInt(expYear, 10) === currentYear && parseInt(expMonth, 10) < currentMonth)) {\n            return false;\n        }\n\n        return true;\n    };\n\n    const handleExpirationDateChange = (e) => {\n        const { value } = e.target;\n        let formattedValue = value.replace(/[^0-9]/g, '').substring(0, 4);\n\n        if (formattedValue.length > 2) {\n            formattedValue = `${formattedValue.substring(0, 2)}/${formattedValue.substring(2, 4)}`;\n        }\n\n        setRegisterData((prevState) => ({\n            ...prevState,\n            cardExpirationDate: formattedValue,\n        }));\n\n        const isValidDate = validateExpirationDate(formattedValue);\n        setExpirationDateError(\n            isValidDate ? '' : 'Expiration date must be in the future and mm/yy.'\n        );\n    };\n\n    const registerUser = async (e) => {\n        e.preventDefault();\n\n        // Check if the card expiration date is valid\n        if (!validateExpirationDate(registerData.cardExpirationDate)) {\n            setExpirationDateError('Expiration date must be in the future.');\n            setOpenSnackbar(true);\n            setSnackbarMessage('Expiration date must be in the future.');\n            setSnackbarType('error');\n            return;\n        }\n\n        // Check if passwords match\n        if (registerData.password !== registerData.confirmPassword) {\n            setExpirationDateError('');\n            setOpenSnackbar(true);\n            setSnackbarMessage(\"Passwords do not match.\");\n            setSnackbarType('error');\n            return;\n        }\n\n        try {\n            const response = await axios.post('http://localhost:5005/user/auth/register', {\n                Name: registerData.Name,\n                email: registerData.email,\n                password: registerData.password,\n                cardNumber: registerData.cardNumber,\n                cardCVC: registerData.cardCVC,\n                cardExpirationDate: registerData.cardExpirationDate,\n            }, {\n                headers: { 'Content-Type': 'application/json' },\n            });\n\n            if (response.status === 201) {\n                setSnackbarMessage(\"Registration successful!\");\n                setSnackbarType('success');\n                setOpenSnackbar(true);\n                setTimeout(() => navigate('/login-customer'), 2000);\n            }\n        } catch (errorResponse) {\n            const errorMessage = errorResponse.response?.data?.message || 'An unexpected error occurred during registration.';\n            setOpenSnackbar(true);\n            setSnackbarMessage(errorMessage);\n            setSnackbarType('error');\n        }\n    };\n\n    const action = (\n        <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleCloseSnackbar}>\n            <CloseIcon fontSize=\"small\" />\n        </IconButton>\n    );\n    \n    return (\n\n        <>\n                 <Snackbar\n                    open={openSnackbar}\n                    autoHideDuration={6000}\n                     onClose={handleCloseSnackbar}\n                     message={snackbarMessage}\n                     anchorOrigin={{ vertical: 'bottom', horizontal: 'center',}}\n                     ContentProps={{\n                        style: {\n                            backgroundColor: snackbarType === 'success' ? theme.palette.success.main : theme.palette.error.main,\n                        },\n                    }}\n                    action={action}\n                />\n\n        <Box sx={{\n            minHeight: '100vh',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center',\n            background: `url(${process.env.PUBLIC_URL}/default_background.jpg), linear-gradient(to right, #e66465, #9198e5)`,\n            backgroundSize: 'cover, cover',\n            backgroundPosition: 'center, center',\n            p: theme.spacing(2),\n        }}>\n            {/* Content and styling similar to the provided structure */}\n            <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', width: '100%', mb: theme.spacing(4) }}>\n                <Box component=\"img\" src={`${process.env.PUBLIC_URL}/LogoImage.jpg`} sx={{ width: 150, height: 'auto', mb: 2 }} />\n                <Typography variant=\"h3\" color=\"white\" sx={{ fontWeight: 'bold', textAlign: 'center' }}>\n                    Join Our Amazing Ticket Platform\n                </Typography>\n            </Box>\n            <Box component=\"form\" onSubmit={registerUser} noValidate sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', width: '100%', maxWidth: 600, backgroundColor: 'rgba(255, 255, 255, 0.8)', padding: theme.spacing(4), borderRadius: theme.shape.borderRadius }}>\n                <Typography variant=\"h4\" sx={{ mb: 3, fontWeight: 'bold', color: theme.palette.primary.main }}>\n                    Create Your Customer Account\n                </Typography>\n                <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"Name\"\n                    label=\"Name\"\n                    name=\"Name\"\n                    autoComplete=\"name\"\n                    autoFocus\n                    value={registerData.Name}\n                    onChange={updateField}\n\n                    error={registerData.Name && (registerData.Name.length < 3 || registerData.Name.length > 100 || /\\s/.test(registerData.Name))}\n                    helperText={registerData.Name\n                        ? (/\\s/.test(registerData.Name)\n                        ? 'Name cannot include spaces.'\n                        :\n                            registerData.Name.length < 3\n                            ? 'Name must be at least 3 characters long.'\n                            : registerData.Name.length > 100\n                                ? 'Name cannot be more than 100 characters long.'\n                                : '')\n                        : ' '} />\n                <TextField\n                    error={!/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(registerData.email) && registerData.email !== ''}\n                    helperText={!/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(registerData.email) && registerData.email !== '' ? 'Enter a valid email address.' : ' '}\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Email Address\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    value={registerData.email}\n                    onChange={updateField} />\n                <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    id=\"password\"\n                    autoComplete=\"new-password\"\n                    value={registerData.password}\n                    onChange={updateField}\n                    inputProps={{\n                        pattern: \"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}\",\n                        title: \"Password must be at least 6 characters long, include a number, a lowercase letter, and an uppercase letter.\"\n                    }}\n                    // Include the error and helperText properties using the same pattern and title\n                    error={registerData.password && !new RegExp(\"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}\").test(registerData.password)}\n                    helperText={registerData.password && !new RegExp(\"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}\").test(registerData.password) ? \"Password must be at least 6 characters long, include a number, a lowercase letter, and an uppercase letter.\" : ' '} />\n                <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"confirmPassword\"\n                    label=\"Confirm Password\"\n                    type=\"password\"\n                    id=\"confirmPassword\"\n                    autoComplete=\"new-password\"\n                    value={registerData.confirmPassword}\n                    onChange={updateField}\n                    error={registerData.confirmPassword && registerData.password !== registerData.confirmPassword}\n                    helperText={registerData.confirmPassword && registerData.password !== registerData.confirmPassword ? 'Passwords do not match.' : ' '} />\n                {/* Assuming card details are needed for host registration */}\n                <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"cardNumber\"\n                    label=\"Card Number\"\n                    value={registerData.cardNumber}\n                    onChange={updateField}\n                    inputProps={{ maxLength: 16 }}\n                    error={registerData.cardNumber && !/^[\\d]{16}$/.test(registerData.cardNumber)}\n                    helperText={registerData.cardNumber && !/^[\\d]{16}$/.test(registerData.cardNumber) ? 'Card number must be 16 digits.' : ' '} />\n                <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"cardCVC\"\n                    label=\"CVC\"\n                    value={registerData.cardCVC}\n                    onChange={updateField}\n                    inputProps={{ maxLength: 3 }}\n                    error={registerData.cardCVC && !/^\\d{3}$/.test(registerData.cardCVC)}\n                    helperText={registerData.cardCVC && !/^\\d{3}$/.test(registerData.cardCVC) ? 'CVC must be 3 digits.' : ' '} />\n                <TextField\n                         margin=\"normal\"\n                         required    \n                         fullWidth\n                         name=\"cardExpirationDate\"\n                         label=\"Expiration Date (MM/YY)\"\n                         value={registerData.cardExpirationDate}\n                         onChange={handleExpirationDateChange}\n                         inputProps={{ maxLength: 5 }}\n                         error={!!expirationDateError} // Error state derived from expirationDateError\n                         helperText={expirationDateError} // Display the error message from expirationDateError\n                    />\n                \n                \n                <IconButton\n                    onClick={handleBack}\n                    size=\"large\"\n                    sx={{\n                        position: 'absolute',\n                        left: theme.spacing(2),\n                        top: theme.spacing(2),\n                        backgroundColor: 'white',\n                        color: 'primary.main',\n                        '&:hover': {\n                            backgroundColor: 'primary.light',\n                            color: 'white',\n                        },\n                        boxShadow: 3,\n                    }}\n                >\n                    <ArrowBackIcon sx={{ fontSize: 28 }} />\n                </IconButton>\n                <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    sx={{ mt: 3, mb: 2 }}\n                >\n                    Register\n                </Button>\n                <Button\n                    fullWidth\n                    variant=\"text\"\n                    onClick={() => navigate('/login-customer')}\n                >\n                    Already have an account? Login\n                </Button>\n            </Box>\n        </Box>           \n    </>\n    );\n\n};\n\nexport default RegisterCustomer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}